{
	"version": "https://jsonfeed.org/version/1.1",
	"title": "Wayne Graham&#39;s Musings",
	"language": "en",
	"home_page_url": "https://waynegraham.github.io/",
	"feed_url": "https://waynegraham.github.io/feed/feed.json",
	"description": "I write about my experiences...randomly",
	"author": {
		"name": "Wayne Graham",
		"url": "https://waynegraham.github.io/about-me/"
	},
	"items": [
		{
			"id": "https://waynegraham.github.io/posts/2015-02-06-svn-to-git/",
			"url": "https://waynegraham.github.io/posts/2015-02-06-svn-to-git/",
			"title": "Migrating from Subversion to git",
			"content_html": "<p>Scholars' Lab not only writes <a href=\"https://github.com/scholarslab\">software</a> and mentors graduate students, it also manages a lot of software projects that have been going on at the University of Virginia since the 90s. One of the things you need to do every so often is shift platforms that you use in your infrastructure.</p>\n<p>When I arrived at the Scholars' Lab six years ago, one of the big\nprojects that was underway was dealing with all of the text that had\naccumulated various servers. To help get a handle on the projects, lots\nof people started using source control management software to start\nkeeping track of changes (and recover more quickly if files were\naccidently deleted). At the time, Subversion was the best option, so a\nbig push was made to convert all of these projects in to Subversion\nrepositories.</p>\n<p>While Subversion is really great in a lot of ways, it did have some\nissues that often made working with the tool quite painful. It was even\nworse for people who did not use the tool every day and could often get\nin to situations where a project would languish for months for an\nobscure issue with a SVN client or server.</p>\n<p>As software development shifted to using <code>git</code> (which I attribute mainly\nto the rise in the utility of GitHub), Scholars' Lab staff pretty much\nstarted using <code>git</code> exclusively.</p>\n<h2 id=\"migrating-the-repo\" tabindex=\"-1\">Migrating the Repo <a class=\"header-anchor\" href=\"https://waynegraham.github.io/posts/2015-02-06-svn-to-git/\">#</a></h2>\n<p>The first step in this migration was to grab a list of authors who had\nworked on the project since <code>git</code> and <code>svn</code> have different methods of\nmapping author attribution.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> path/to/svn_repo\n$ svn log <span class=\"token parameter variable\">-q</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">'|'</span> <span class=\"token string\">'/^r/ {sub(\"^ \", \"\", $2); sub(\" $\", \"\", $2); print $2\" = \"$2\" &lt;\"$2\">\"}'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token parameter variable\">-u</span> <span class=\"token operator\">></span> authors.txt</code></pre>\n<p>Next, you need to edit the <code>authors.txt</code> file a bit to expand the username mappings. In the file, you'll see <code>username = username &lt;username&gt;</code>. You just need to use the person's real name and email address.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">wsg4w <span class=\"token operator\">=</span> Wayne Graham <span class=\"token operator\">&lt;</span>wsg4w@uva.edu<span class=\"token operator\">></span></code></pre>\n<h2 id=\"clone-the-repo\" tabindex=\"-1\">Clone the Repo <a class=\"header-anchor\" href=\"https://waynegraham.github.io/posts/2015-02-06-svn-to-git/\">#</a></h2>\n<p>This is where things got <em>interesting</em>. The <code>git svn</code> tool is generally\nwhere I go to do this thing, but the repository I'm dealing with is\nreally big, and has a non-standard layout. The first thing I tried was\nthis:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> ~/temp\n$ <span class=\"token builtin class-name\">cd</span> path/to/svn_repo\n$ <span class=\"token function\">git</span> svn clone https://subversion.lib.virginia.edu/repos/salem <span class=\"token parameter variable\">--username</span> wsg4w --no-metadata <span class=\"token parameter variable\">-A</span> authors.txt <span class=\"token parameter variable\">--stdlayout</span> ~/temp</code></pre>\n<p>However, this failed after the server threw a 500 error. Ok, so rethink\nthis. I can create a local sync of the SVN repo which should allow me to\nrecover from a server failure.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /tmp/salem\n$ svnadmin create /tmp/salem/\n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"exit 0;\"</span> <span class=\"token operator\">></span> /tmp/test-svn/hooks/pre-revprop-change\n$ <span class=\"token function\">chmod</span> +x /tmp/salem/hooks/pre-revprop-change\n$ svnsync init file:///tmp/salem https://subversion.lib.virginia.edu/repos/salem\n$ svnsync <span class=\"token function\">sync</span> file:///tmp/salem</code></pre>\n",
			"date_published": "2015-02-06T00:00:00Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2014-02-07-modern-takes-on-classic-art/",
			"url": "https://waynegraham.github.io/posts/2014-02-07-modern-takes-on-classic-art/",
			"title": "Modern Takes on Classic Art",
			"content_html": "<p>I'm a big fan of Rene Magritte's work (I have <a href=\"http://en.wikipedia.org/wiki/Image:MagrittePipe.jpg\"><em>La trahison des images</em></a> hanging in my office). I <a href=\"http://www.threadless.com/product/543/This_is_not_a_Pipe#zoom\">ran across this shirt</a>, and I'm sure that Magritte would appreciate the update to his work.</p>\n",
			"date_published": "2014-02-07T13:55:24Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2012-01-02-disaster-averted/",
			"url": "https://waynegraham.github.io/posts/2012-01-02-disaster-averted/",
			"title": "Disaster Averted",
			"content_html": "<p>Today as I was finishing chapter 10 of my forthcoming book, I ran in to a major issue. My publisher (Apress) uses Microsoft Word templates for submissions. As I was finishing the summary, the Word wheel started spinning and I was soon notified that Word couldn't save the file. Not a big deal, I just saved it to another file name. I renamed the file and tried to open it back up and I got an error that Word could not open the file as it was larger than 32MB. Panic set in, and some swearing (ok, a lot). I looked at the file and it was a whopping 684Mb.</p>\n<p>After some Googling, I ran in to some directions on how to fix the problem for Windows users. Basically you copy the file, rename it as a zip file, expand the directory, and resize the files. On my OS X box, I resized the images with <a href=\"http://imageoptim.pornel.net/\">ImageOptim</a> (I use it when I need a quick and dirty image compressor). However, when I re-compressed the files with the Compression utility, I kept getting errors in Word that it could not open the file. Again, panic and a lot of swearing (we are talking about 30 pages here).</p>\n<p>Turns out I just needed the zip utility. I just went in to the directory that had my expanded zip files and recursively zipped all the files back in:</p>\n<pre><code>cd ch10\nzip -r ch10.zip *\nmv ch10.zip ch10.docx\n</code></pre>\n<p>I opened the file back up in Word and after some complaining that the file format wasn't correct, the file open with all the content in it! Hopefully you will never run in to this, but if you do, the fix isn't that difficult.</p>\n",
			"date_published": "2012-01-02T20:56:03Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2010-10-03-automatic-rvm-gemsets/",
			"url": "https://waynegraham.github.io/posts/2010-10-03-automatic-rvm-gemsets/",
			"title": "Automatic rvm gemsets",
			"content_html": "<p>I've been using Ruby version manager (rvm) for a while now, but hadn't really been paying too much attention to its new features. Over the weekend, I ran in to perhaps one of the coolest new features: project-level configurations. Essentially this allows you to set up your Ruby project to automatically switch gemsets when you enter the directory with the terminal.</p>\n<p>To try this out, I created a new gemset and then told my project about it:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">rvm gemset create project_name\n<span class=\"token function\">cat</span> <span class=\"token string\">\"rvm ruby@project_name\"</span> <span class=\"token operator\">></span> path/to/project/.rvmrc</code></pre>\n<p>Now, when you <code>cd</code> in to the directory, rvm will automagically switch gemsets for you. No more firing up rails only to get the error message that you don't have the right rubies installed. Great time saver, and if you're managing projects that aren't using bundler yet, a real time saver!</p>\n",
			"date_published": "2010-10-03T12:35:17Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2010-09-28-add-highlight-link-to-current-page-in-rails/",
			"url": "https://waynegraham.github.io/posts/2010-09-28-add-highlight-link-to-current-page-in-rails/",
			"title": "Add highlight link to current page in Rails",
			"content_html": "<p>I recently wanted to add a highlight link to a navigational element if the navigation was on the current page. I thought this would be pretty straight forward with Rails' link_to helper. Turns out it was a little less-than-intuitive. So, to remind myself (and show others) how to do this, I'm providing the following:</p>\n<pre class=\"language-ruby\" tabindex=\"0\"><code class=\"language-ruby\"><span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">%=</span> link_to_unless_current <span class=\"token string-literal\"><span class=\"token string\">\"Home\"</span></span><span class=\"token punctuation\">,</span> root_path <span class=\"token keyword\">do</span> <span class=\"token string-literal\"><span class=\"token string\">%>\n          &lt;%= link_to \"Home\", root_path, :class =></span></span> <span class=\"token string-literal\"><span class=\"token string\">\"current\"</span></span> <span class=\"token string-literal\"><span class=\"token string\">%>\n        &lt;% end %></span></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span></code></pre>\n<p>In my research, I saw different ways of going about this, but this apparently is the recommended method as it's in the documentation (see the <a href=\"http://api.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to_unless_current\">URLHelper</a>).</p>\n<p>I have to say this seems a bit counter-intuitive and not as &quot;easy&quot; as it should be. I kept expecting to be able to do something like:</p>\n<pre class=\"language-ruby\" tabindex=\"0\"><code class=\"language-ruby\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">%=</span> link_to <span class=\"token string-literal\"><span class=\"token string\">\"Home\"</span></span> <span class=\"token punctuation\">{</span>home_path<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> current_page<span class=\"token operator\">?</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token symbol\">:class</span> <span class=\"token operator\">=></span> <span class=\"token string-literal\"><span class=\"token string\">'current'</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">nil</span> <span class=\"token operator\">%</span><span class=\"token operator\">></span></code></pre>\n<p>Anyway, if you want to add a highlight class, this works.</p>\n",
			"date_published": "2010-09-28T15:55:22Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2010-04-17-zotero-ruby-fun/",
			"url": "https://waynegraham.github.io/posts/2010-04-17-zotero-ruby-fun/",
			"title": "Zotero + Ruby == Fun!",
			"content_html": "<p>Last week I was on a panel at the Organization of American Historian's Annual Meeting up in DC with some folks from <a href=\"http://chnm.gmu.edu/\">CHNM</a>. One of the really cool thing that I've noticed is every time I'm around those folks, I get ideas...which can be dangerous. I had been meaning to poke at the Zotero API for a while and after talking with <a href=\"http://twitter.com/tjowens/\">@tjowens</a>, <a href=\"http://twitter.com/joegilbert\">@joegilbert</a>, and <a href=\"http://twitter.com/clioweb\">@clioweb</a> over some falafels, I started putting some ideas together on the train home.</p>\n<p>Over the last couple of years, I've been working on-and-off on improving the <a href=\"http://deca.swem.wm.edu/\">Database of Early Chesapeake Architecture</a>. I'd recently gotten the data (again) from Swem Library and had been working on pushing it to a more open framework (it was ColdFusion + MSSQL; now Rails + Postgresql). What I wanted to be able to add in is an extensible method of citation for the various buildings and sites used (check out the <a href=\"http://deca.heroku.com\">work-in-progress</a>). At the time, I tried to use RefWorks (with very little success) to handle the citations, but with the improvements to Zotero (and it's Group ability), I thought I'd go down this road and test if this is a viable method of citation management.</p>\n<p>I first took a look at Jeremy's <a href=\"http://github.com/clioweb/phpZotero\">phpZotero code</a>. The first thing I noticed is that there's a pretty funky way that you have to construct URLs for the &quot;API&quot; (I think the Zotero API is more of an RSS decorator than an API, but hopefully they're working on that). Essentially you construct a URL requests to the Zotero API server with a user ID. Unfortunately, most people don't know their user_id, so the PHP code goes and looks this up on a different server, parses out the user_id, then constructs an HTTP request for RSS data from the API server. I kind of brace a bit at the thought of every request needing to go to two servers (multiple points of failure, speed, etc.). When I started creating a ruby wrapper for these calls, I made the object use the user_id (Integer) and not the user_name (String). Knowing folks might not know their user_id, I whipped up a quick Sinatra app on heroku to look up Zotero User ids: <a href=\"http://zotero-id-finder.heroku.com/\">zotero-id-finder</a> (source on <a href=\"http://github.com/waynegraham/Zotero-ID-Finder\">github</a>).</p>\n<p>Next, I needed something to not have to use Nokogiri all the time to grab info off the Zotero server. I made a basic Gem to wrap these requests named <a href=\"http://rubygems.org/gems/rzotero\">rzotero</a>. This is really helpful, but what I really wanted to do is add citations to ActiveRecord models a la acts_as_taggable. To that end, I started mocking up <a href=\"http://github.com/waynegraham/acts_as_citable\">acts_as_citable</a> which will allow you to add in citations identifiers to be used with rzotero plugin to record and display items in a collection in ActiveRecord contexts.</p>\n<p>As a warning, all of these are in a pre-alpha-ish state and may (badly) break your code (especially since it's lightly tested right now). As things progress, I'll have more posts here, and over on the <a href=\"http://www.scholarslab.org\">Scholars' Lab site</a>.</p>\n",
			"date_published": "2010-04-17T13:36:10Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2009-11-25-openlayers-and-mobile-devices/",
			"url": "https://waynegraham.github.io/posts/2009-11-25-openlayers-and-mobile-devices/",
			"title": "Openlayers and Mobile Devices",
			"content_html": "<p>After some really good conversations last week at the Institute on Enabling Geospatial Scholarship about mobile devices and mapping as an interpretive device, I mocked up a quick page to see how <a href=\"http://openlayers.org/\">OpenLayers</a> looked on the Safari mobile browser. The theory to test out here was that you could pretty easily pull up your current location and plot your (approximate) location on a historic map (or any map for that matter) without having to install an application (like <a href=\"http://emergencestudios.com/historicearth/\">Old Map App</a>). There are various hurdles in higher education to actually releasing software application through vendors like Apple's App Store (restrictions on individual employees entering into contractual agreements), so we thought we'd explore using the browser to provide some of this functionality to users.</p>\n<p>We have a few historic maps from our McGregor collection available through our <a href=\"http://geoserver.org\">Geoserver</a> installation, so I looked up their layer ids and manually added them into a page with OpenLayers. Nothing fancy here, just a test to see what it looks like.</p>\n<pre class=\"language-javascript\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> lat<span class=\"token punctuation\">,</span> long layer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> zoom <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> lat<span class=\"token punctuation\">,</span> lon<span class=\"token punctuation\">,</span> layer<span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">var</span> zoom <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenLayers<span class=\"token punctuation\">.</span>Map</span><span class=\"token punctuation\">(</span><span class=\"token string\">'map'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n map<span class=\"token punctuation\">.</span><span class=\"token function\">addControl</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenLayers<span class=\"token punctuation\">.</span>Control<span class=\"token punctuation\">.</span>LayerSwitcher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n layer1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenLayers<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>WMS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Map of the Southern States\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">\"http://lat.lib.virginia.edu:8080/geoserver/gwc/service/wms\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">layers</span><span class=\"token operator\">:</span> <span class=\"token string\">\"McGregor:000003056_00011\"</span><span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n layer2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenLayers<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>WMS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Nova Virginae tabula\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">\"http://lat.lib.virginia.edu:8080/geoserver/gwc/service/wms\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">layers</span><span class=\"token operator\">:</span> <span class=\"token string\">\"McGregor:000003482_00011\"</span><span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n layer3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenLayers<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>WMS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A map of the most inhabited part of Virginia\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">\"http://lat.lib.virginia.edu:8080/geoserver/gwc/service/wms\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">layers</span><span class=\"token operator\">:</span> <span class=\"token string\">\"McGregor:000003012_st1\"</span><span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n layer4 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenLayers<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>WMS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Carte de la campagne en Virginie du Major General Mis. de la Fayette\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">\"http://lat.lib.virginia.edu:8080/geoserver/gwc/service/wms\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">layers</span><span class=\"token operator\">:</span> <span class=\"token string\">\"McGregor:000003013_st1\"</span><span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n layer5 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenLayers<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>WMS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Carte de la campagne en Virginie du Major General Mis. de la Fayette\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">\"http://lat.lib.virginia.edu:8080/geoserver/gwc/service/wms\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">layers</span><span class=\"token operator\">:</span> <span class=\"token string\">\"McGregor:000003019_00011\"</span><span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n map<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>layer1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n map<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>layer2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n map<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>layer3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n map<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>layer4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n map<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>layer5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n navigator<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">position</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n lat <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>coords<span class=\"token punctuation\">.</span>latitude<span class=\"token punctuation\">;</span>\n lon <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>coords<span class=\"token punctuation\">.</span>longitude<span class=\"token punctuation\">;</span>\n map<span class=\"token punctuation\">.</span><span class=\"token function\">setCenter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenLayers<span class=\"token punctuation\">.</span>LonLat</span><span class=\"token punctuation\">(</span>lon<span class=\"token punctuation\">,</span> lat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> zoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\">var</span> vectorLayer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenLayers<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>Vector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Overlay\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">var</span> feature <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenLayers<span class=\"token punctuation\">.</span>Feature<span class=\"token punctuation\">.</span>Vector</span><span class=\"token punctuation\">(</span>\n <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenLayers<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point</span><span class=\"token punctuation\">(</span>lon<span class=\"token punctuation\">,</span> lat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">some</span><span class=\"token operator\">:</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">externalGraphic</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://geocoder.ca/marker.png'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">graphicHeight</span><span class=\"token operator\">:</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">graphicWidth</span><span class=\"token operator\">:</span> <span class=\"token number\">48</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n vectorLayer<span class=\"token punctuation\">.</span><span class=\"token function\">addFeatures</span><span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n map<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>vectorLayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">addControl</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenLayers<span class=\"token punctuation\">.</span>Control<span class=\"token punctuation\">.</span>PanZoomBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>This actually worked surprisingly well the first time I launched it. With Firefox 3.5 I tested it on my laptop. At first I wasn't using the <a href=\"http://geoserver.org/display/GEOSDOC/5.+GWC+-+GeoWebCache\">geowebcache</a> we had set up, so it was a bit slow. I changed to the geowebcache WMS service and things in the browser were noticeably faster.</p>\n<p>At lunch, I handed an iPhone to <a href=\"http://iconocla.st/\">Schuyler Erle</a> who's first instinct was to try to drag things around and zoom-in and out. Well, there was a fail as the controls you normally use in OpenLayers were far too small to actually be useful and it just didn't feel right.</p>\n<p>I then attempted to add in a touchHandler function to help with the interactions from the user. I found Ross Boucher's post &quot;<a title=\"Permanent Link: iPhone Touch Events in JavaScript\" rel=\"bookmark\" href=\"http://rossboucher.com/2008/08/19/iphone-touch-events-in-javascript/\">iPhone Touch Events in JavaScript</a>&quot; and used his code to get the sliding working:</p>\n<pre class=\"language-javascript\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">touchHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">var</span> touches <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">,</span>\n   first <span class=\"token operator\">=</span> touches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   type <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">case</span> <span class=\"token string\">\"touchstart\"</span><span class=\"token operator\">:</span> type <span class=\"token operator\">=</span> <span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">case</span> <span class=\"token string\">\"touchmove\"</span><span class=\"token operator\">:</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"mousemove\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">case</span> <span class=\"token string\">\"touchend\"</span><span class=\"token operator\">:</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"mouseup\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\n <span class=\"token comment\">// initMouseEvent(type, canBubble, cancelable, view, clickCount,</span>\n <span class=\"token comment\">// screenX, screenY, clientX, clientY, ctrlKey,</span>\n <span class=\"token comment\">// altKey, shiftKey, metaKey, button, relatedTarget);</span>\n\n    <span class=\"token keyword\">var</span> simulatedEvent <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MouseEvent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    simulatedEvent<span class=\"token punctuation\">.</span><span class=\"token function\">initMouseEvent</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> window<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    first<span class=\"token punctuation\">.</span>screenX<span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">.</span>screenY<span class=\"token punctuation\">,</span>\n    first<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token comment\">/*left*/</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    first<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>simulatedEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\n document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchstart\"</span><span class=\"token punctuation\">,</span> touchHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchmove\"</span><span class=\"token punctuation\">,</span> touchHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchend\"</span><span class=\"token punctuation\">,</span> touchHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchcancel\"</span><span class=\"token punctuation\">,</span> touchHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Now the scrolling worked, but you could no longer zoom into the map (and we want real zoom, not just making the image bigger). I haven't found a fix for this yet, but I have to say that this is a kind of cool way of interacting with these materials.</p>\n<p>Something I need to talk with Joe about next week making your location a query to <a href=\"http://geonetwork-opensource.org/\">Geonetwork</a> and then using the top n maps returned to build this interface. It's a little like a coverage map for your current location.</p>\n",
			"date_published": "2009-11-25T13:03:09Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2009-11-20-more-on-omeka-packaging/",
			"url": "https://waynegraham.github.io/posts/2009-11-20-more-on-omeka-packaging/",
			"title": "More on Omeka Packaging",
			"content_html": "<p>I had meant to get this info out there a bit earlier, but we were sponsoring an <a href=\"http://www2.lib.virginia.edu/scholarslab/geospatial/\">NEH Institute on Enabling Geospatial Scholarship</a>. That's a different post, but I did want to get back to Omeka and flush out building the RPM for Omeka.</p>\n<p>What I'm going to do here is go through the setup for building the RPM and the spec file. This <em>should</em> work on just about any OS that uses RPM for installing software, but this isn't tested very extensively.</p>\n<p>So I guess the first thing to cover is what exactly an RPM is. RPM is the Redhat Package Manager and is an implementation of a container for other files. It allows you to quickly install software, including necessary programs to run the program, provides information about the program you are installing, informs users about potential conflicts between your program and the software currently installed on the system, and provides a path to install, upgrade, and remove the software.</p>\n<p>Now, in the case of Omeka, you don't really need a package manager if you're a seasoned system administrator. However, if you're wanting to run this yourself, and you have to convince others to manage the software for you (e.g. you're running it at an institution), have an RPM that your systems administrator installs will save a lot of headaches, especially since upgrades to the software can be integrated into scheduled maintenance with kernel and other software upgrades.</p>\n<p>Building RPMs requires two things, the source you want to install and a specification (spec) file that tells the software what to do. You'll need to first set your system up to have the tools to build software which you can do with a couple of lines (as the root user):</p>\n<pre><code>yum groupinstall &quot;Development Tools&quot;\nyum install rpmdevtools\n</code></pre>\n<p>Next we need the directory hierarchy for building the RPMs. You can do this manually, but there's a handy tool for helping out called rpmdev-setuptree. In the terminal, if you run this command, it will create a new folder in your home directory named &quot;rpmbuild&quot; with the correct directories made for you.</p>\n<pre><code>rpmdev-setuptree\n</code></pre>\n<p>If you want these in a different location, say omeka_rpm, you can manually create the following hierarchy:</p>\n<pre><code>mkdir -p ~/omeka_rpm/BUILD\nmkdir -p ~/omeka_rpm/BUILDROOT\nmkdir -p ~/omeka_rpm/RPMS\nmkdir -p ~/omeka_rpm/SOURCES\nmkdir -p ~/omeka_rpm/SPECS\nmkdir -p ~/omeka_rpm/SRPMS\n</code></pre>\n<p>For our purposes, we're really going to be dealing in the SOURCES and SPEC directories. Let's start with the setup for the source files. First you need to get the source files from <a href=\"http://omeka.org/download\">Omeka's website</a> and put it into your SOURCES folder. We have to do some additional work with this file since it's packaged using zip and the RPM is expecting a gzipped tarball. The following code snip assumes you're using the default structure from the rpmdev-setuptree command and if a release after Omeka 1.1 is the most current, you will need to update the revision numbers.</p>\n<pre><code>cd ~/rpmbuild/SOURCES\nwget http://omeka.org/files/omeka-1.1.zip\nunzip omeka-1.1.zip\nmv omeka-1.1 omeka\ntar -czvf omeka-1.1.tar.gz omeka\n</code></pre>\n<p>Now if take a look at the directory, you should see a new file named &quot;omeka-1.1.tar.gz&quot; which is in the correct format for using it to build our RPM. There are two more files we need in here, an httpd configuration file and a readme for its use. Let's just touch these so they exist and we can come back and add content to them a little later after I discuss them.</p>\n<pre><code>cd ~/rpmbuild/SOURCES\ntouch fedora-http-conf\ntouch README.fedora.omeka\n</code></pre>\n<p>Ok, let's look at the real meat of this now. You need to create an omeka.spec file in the SPECS directory. This is the script that tells the rpmbuild tool how to set up the system.</p>\n<p>I use gedit when I have a GUI, but emacs or vi work just as well (better if you're good at the commands).</p>\n<p>The idea behind this setup is to set up Omeka much like other software on the system is set up. This assumes that there will be only one installation of Omeka running on the system and takes into account that MySQL may be running on another server, so only the php &amp;gt;= 5.2.4, httpd, php-mysql, and ImageMagick packages are required. The configuration for the database connection is set in /etc/omeka/db.ini and uses a symbolic link to the application files in /usr/share/omeka (though this isn't quite working yet). Themes and the archive folder shouldn't get overwritten, so those directories stay in place. An httpd configuration for omeka (which aliases &quot;/omeka&quot;) is added into the httpd.conf directory. Since this software does not actually need to be compiled for a processor architecture type, the build archicture is set to noarch.</p>\n<pre><code>Summary: Omeka web publishing software\nURL: http://omeka.org\nName: omeka\nVersion: 1.1\nGroup: Application/Publishing\nRelease: 1%{?dist}\nLicense: GPL\nSource0: %{name}-%{version}.tar.gz\nSource1: omeka-http-conf\nSource2: README.fedora.omeka\nBuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)\nRequires: php &amp;amp;gt;= 5.2.4, httpd, php-mysql, ImageMagick\nBuildArch: noarch\n\n%description\nOmeka is a free and open source collections based web-based publishing platform for scholars, librarians, archivists, museum professionals, educators, and cultural enthusiasts.\n\n%prep\n%setup -q -n omeka\n\n%install\n mkdir -p ${RPM_BUILD_ROOT}%{_datadir}/omeka\n mkdir -p ${RPM_BUILD_ROOT}%{_sysconfdir}/omeka\n install -m 0644 -D -p %{SOURCE1} ${RPM_BUILD_ROOT}%{_sysconfdir}/httpd/conf.d/omeka.conf\n cp -pr * ${RPM_BUILD_ROOT}%{_datadir}/omeka\n #cat db.ini | sed -e &quot;s|dirname(__FILE__).'/'|'/usr/share/omeka/!|g&quot; &amp;amp;gt; ${RPM_BUILD_ROOT}%{_sysconfdir}/omeka/db.ini\n #/bin/ln -sf ../../../etc/omeka/db.ini ${RPM_BUILD_ROOT}%{_datadir}/omeka/db.ini\n /bin/cp %{SOURCE2} ./README.fedora\n # Remove empty files for rmplint\n find ${RPM_BUILD_ROOT} -empty -exec rm -f {} \\;\n # These are docs; remove and docify later\n rm -f ${RPM_BUILD_ROOT}%{_datadir}/omeka/{readme.txt,license.txt,release.txt,changelog.txt}\n\n%clean\n rm -rf ${RPM_BUILD_ROOT}\n\n%files\n %defattr(-,root,root,-)\n %config(noreplace) %{_sysconfdir}/httpd/conf.d/omeka.conf\n %dir %{_datadir}/omeka\n %{_datadir}/omeka/admin\n %{_datadir}/omeka/application\n %{_datadir}/omeka/archive\n %doc changelog.txt\n %config(noreplace) %{_sysconfdir}/omeka/db.ini\n %{_datadir}/omeka/index.php\n %doc license.txt\n %{_datadir}/omeka/paths.php\n %{_datadir}/omeka/install\n %{_datadir}/omeka/plugins\n %doc readme.txt\n %doc release.txt\n %{_datadir}/omeka/robots.txt\n %{_datadir}/omeka/themes\n %dir %{_sysconfdir}/omeka\n\n%changelog\n* Mon Nov 09 2009 Wayne Graham &amp;amp;lt;wayne dot graham at virginia dot edu&amp;amp;gt; - 1.1\n- Initial build\n</code></pre>\n<p>Now we can add in the httpd configuration that will get written. Open up SOURCES/omeka-http-conf and add</p>\n<pre><code>Alias /omeka /var/www/omeka\n\n&lt;Directory /var/www/omeka&gt;\n AllowOverride Options\n&lt;/Directory&gt;\n\nAnd README.fedora.omeka\n</code></pre>\n<p>Omeka is a database driven web publishing program.</p>\n<p>Once this package is installed, there are a few configuration items which need\nto be performed before Omeka is usable.  First, you need to establish a\nusername and password with which to connect to your MySQL database. You also need to make both\nMySQL and Omeka aware of this configuration.  Let's start by creating the database and the\nusername / password inside MySQL first:</p>\n<h1 id=\"mysql\" tabindex=\"-1\">mysql <a class=\"header-anchor\" href=\"https://waynegraham.github.io/posts/2009-11-20-more-on-omeka-packaging/\">#</a></h1>\n<pre><code>mysql&amp;amp;gt; create database omeka;\nQuery OK, 1 row affected (0.00 sec)\n\nmysql&amp;amp;gt; grant all privileges on omeka.* to omeka identified by '1superPrivateOmekaPassword!';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&amp;amp;gt; flush privileges;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&amp;amp;gt; exit\nBye\n</code></pre>\n<p>Under certain curcumstances, you may need to run variations of the &quot;grant&quot;\ncommand:\n<code>mysql&amp;amp;gt; grant all privileges on omeka.* to omeka@localhost identified by 'omeka';</code>\nOR\n<code>mysql&amp;amp;gt; grant all privileges on omeka.* to omeka@'%' identified by 'omeka';</code></p>\n<p>This has created an empty database named 'omeka', created a user named\n'omeka' with a password of '1superPrivateOmekaPassword!', and given the 'omeka' user total\npermission over the 'omeka' database.  Obviously, you'll want to select a\ndifferent password, and you may want to choose different database and user\nnames depending on your installation.  The specific values you choose are\nnot constrained, they simply need to be consistent between the database and the\nconfig file.</p>\n<p>Next, you need to edit your /var/www/omeka/db.ini file to reflect the\nvalues you've chosen.  These values will go in the appropriate places at the\nbeginning of that file.</p>\n<p>Once that's done and the database server and web server have been started,\nopen a web browser to http://localhost/omeka/install/ and\nfollow the instructions given to you on the pages you see to set up the\ndatabase tables and begin publishing your Omeka instace.</p>\n<pre><code>\nNow everything is in place. Let's try to build this thing. Go in to the SPEC directory and build the binary for the rpm.\n\n```\ncd ~/rpmbuild/SPECS\nrpmbuild -bb omeka.spec\n```\n\nThis takes a while, and if you're running this through VMWare of VirtualServer, this process will demand some pretty hefty system resources and your system will slow down.\n\nIf everything has gone correctly, you should now have a nice new RPM package named omeka-1.1.fc11.noarch.rpm in the RPMS/noarch directory. You can test it out by installing the package with\n\n```\nrpm -Uvh omeka-1.1.fc11.noarch.rpm\n```\n\n&lt;h2&gt;What's Next&lt;/h2&gt;\nFor packaging RPMs like this, a few more infrastructure elements need to be in place. The following outlines some of them (if you have more, leave a comment).\n&lt;ul&gt;\n    &lt;li&gt;Put the build files into SCM (currently only in our private SVN repo)&lt;/li&gt;\n    &lt;li&gt;Auto-install dependencies&lt;/li&gt;\n    &lt;li&gt;Set up an RPM repository to work with yum\n&lt;ul&gt;\n    &lt;li&gt;Target specific Linux builds&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n    &lt;li&gt;Automate build&lt;/li&gt;\n    &lt;li&gt;Run MySQL setup script after initial install&lt;/li&gt;\n    &lt;li&gt;Build aptitude package (using &lt;a href=&quot;http://packages.debian.org/lenny/alien&quot;&gt;alien&lt;/a&gt;?)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;Additional Resources&lt;/h2&gt;\n&lt;ul&gt;\n    &lt;li&gt;&lt;a href=&quot;http://docs.fedoraproject.org//developers-guide/ch-rpm-building.html&quot;&gt;Chapter 4. Building RPM Packages&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a title=&quot;How To Build RPM Packages on Fedora&quot; rel=&quot;bookmark&quot; href=&quot;http://www.g-loaded.eu/2006/04/05/how-to-build-rpm-packages-on-fedora/&quot;&gt;How To Build RPM Packages on Fedora&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=&quot;http://fedoraproject.org/wiki/Packaging/ScriptletSnippets&quot;&gt;RPM scriptlet recipes&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=&quot;http://fedoraproject.org/wiki/Packaging/NamingGuidelines&quot;&gt;Package Naming Guidelines&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=&quot;http://fedoraproject.org/wiki/Packaging/Guidelines&quot;&gt;Packaging Guidelines&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n</code></pre>\n",
			"date_published": "2009-11-20T13:42:11Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2009-11-17-map-hacking/",
			"url": "https://waynegraham.github.io/posts/2009-11-17-map-hacking/",
			"title": "Map Hacking",
			"content_html": "<p>We've been hosting an NEH Institute for Enabling Geospatial Scholarship this week and we have a lot of different folks coming together to talk about mapping issues in higher education. I almost haven't been able to keep my delicious tagging up with all the kewl new tools folks have been talking about.</p>\n<p>One thing I did try out this evening when I got home was <a href=\"http://www.mapstraction.com/\">Mapstraction</a>. My wife has a set of data (reading test scores) that she's been wanting to look at to see if there were neighborhoods where students were underperforming. Using a short ruby script (with the graticule gem), I geocoded addresses, calculated a median score across five reading tests, then plotted them using Mapstraction. At the top, I added some slider controls for filtering the data points, and viola, a really quick-and-dirty interactive map that lets her quickly filter ranges of scores to start looking for patterns.</p>\n<p>Now to tweak the algorithm for generating the scores...</p>\n",
			"date_published": "2009-11-18T00:28:37Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2009-11-11-deploying-omeka/",
			"url": "https://waynegraham.github.io/posts/2009-11-11-deploying-omeka/",
			"title": "Deploying Omeka",
			"content_html": "<p>At work, we've been doing a lot of development using the Omeka framework. We've implemented plugins to enable the software to interact with our Fedora repository, work with geo-rectified images, build in a search interface with Solr, and another one (Adam's not quite ready to announce this one yet). However, as good as the project is, one thing I've noticed is that the ways to deploy the software are a bit heavy on the user knowing what they're doing. They've done a good job of guiding users through the setup after all the pieces are in place, but I'm a big fan of having automated ways of deploying software.</p>\n<p>One of my favorite deployment tools is Capistrano. I love being able to check changes to the software to our Subversion server, and from my local machine type a simple command and update the remote source. We actually have been using this for several of our instances on our staging servers. The secret for deploying a PHP project with Capistrano is with <a href=\"http://github.com/leehambley/railsless-deploy\">Lee Hambley's railsless-deploy gem</a>. The first time you set one of these up, it's a real pain, but you can quickly develop a template for deploying these.</p>\n<p>I've been paying attention to some of the musings on Twitter regarding setting Omeka up. One of the big stumbling blocks is with MySQL. I wrote a quick helper script, and in one of my &quot;how can I make this more beneficial&quot; moments, I wrote a spec file for generating an rpm to install it.</p>\n<p>I hadn't worked on packaging in Linux for a while and forgot how painful it could be. Compounding my efforts was the fact that I was running Fedora Core to build it from VirtualBox. Normally this runs fine, but the fact that I was using rpmbuild was causing VirtualBox to eat up most of my available memory (I only have 4GB). It was just slow going because the rpmlint was taking so long.</p>\n<p>Anyway, I have a functional rpm that can how be installed. I haven't tested it much (read that at all), but I believe I've worked the bugs out of the build process. The idea here is to deploy it in a slightly different manner than you get out of the box. The RPM version creates /etc/omeka where it stores its database configuration and then defaults to placing the directory tree in /var/www/omeka. This helps in separating the configuration from the actual web application, but I'm debating with myself if everything but the archive folder should go into /usr/local/omeka.</p>\n<p>Anyway, we'll have an update soon, along with more code!</p>\n",
			"date_published": "2009-11-11T22:10:40Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2009-08-30-rails-and-gis/",
			"url": "https://waynegraham.github.io/posts/2009-08-30-rails-and-gis/",
			"title": "Rails and GIS",
			"content_html": "<p>As a part of my research time, I've started dusting off an old project I always wanted to get back to. Back in 2005 I started working with some folks who were starting to write an article on the development of architectural identity in the early Chesapeake for the William and Mary Quarterly. I wrote the application in ColdFusion and used MSSQL as the backend. When the same data was used for another article in the Journal of Southern History, I quickly whipped up an app that would at least display the information. I was never happy with it, but didn't have the time to undertake this again.</p>\n<p>One of the things I never liked the way I handled was describing the basic location. At first the architectural historians wanted to use UTM coordinates. I switched to latitute/longitude and wrote some conversion code to switch between the two. I was bothered, though, that describing a &quot;site&quot; by a point. Obviously a site is an area that contains some number n buildings. Even worse, the points were really just the centroids of the county/city of the information that was entered as the archaeologists didn't have have information. There had to be a better way to approach the description of this information over time.</p>\n<p>I started working at UVa earlier this spring and one of their big pushes has been GIS in the humanities. A light went off and I saw a rather nice use of using the concepts of GIS to better describe and interact with my information. I also really wanted to migrate the information to a more open format as well as really spend some time envisioning what the application should look like.</p>\n<p>I've started working on this migration and have posted it on <a href=\"http://github.com/waynegraham/DECA\">Github</a>. To give a brief explanation of how the application. I'm using PostGIS as the backend. On OS X, getting this ready took a bit, but I think I got it explained in the README file decently. It took a while to get the correct templates ready in PostgreSQL.</p>\n<p>I'm using OpenLayers for interacting with the maps (through <a href=\"http://github.com/pka/map_layers/tree/master\">map_layers</a>), and the <a href=\"http://github.com/fragility/spatial_adapter/tree/master\">spatial_adapter</a> plugin and the <a href=\"http://georuby.rubyforge.org/\">GeoRuby</a> gem.</p>\n<p>I'm expecting there to be some refactoring of the data from MSSQL, but I think PostgreSQL will be a much better solution for my open source leanings.</p>\n<p>I'll try to keep this updated with my progress...at least until our development blog gets off the ground.</p>\n",
			"date_published": "2009-08-30T20:11:20Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2009-08-28-capistrano-deployment-for-omeka/",
			"url": "https://waynegraham.github.io/posts/2009-08-28-capistrano-deployment-for-omeka/",
			"title": "Capistrano Deployment for Omeka",
			"content_html": "<p>We're currently starting a project at the Scholars' Lab in which we're going to use <a href=\"http://www.omeka.org\">Omeka</a>. We're a Rails shop and use <a href=\"http://www.capify.org/index.php/Capistrano\">Capistrano</a> to deploy projects to our staging and production servers all the time. Since I had read that Capistrano didn't need to be for Rails, I thought it would help out in deploying the PHP for our Omeka work.</p>\n<p>It took a little work, but I finally stumbled across Lee Hambley's <a href=\"http://github.com/leehambley/railsless-deploy/tree/master\">railsless-deploy</a> project over on Github.</p>\n<p>The install is pretty easy (assuming you have rubygems installed).</p>\n<pre><code>$ gem sources -a http://gems.github.com/ # make sure you have github sources installed\n$ gem install leehambley-railsless-deploy\n</code></pre>\n<p>After this, for rails apps, you just capify the project, but this command didn't seem to work, so I just manually added the Capfile in the root of the project directory with the snip provided on the project page:</p>\n<pre><code>load 'deploy' if respond_to?(:namespace) # cap2 differentiator\n# Dir['vendor/plugins/*/recipes/*.rb'].each { |plugin| load(plugin) }\n\nrequire 'rubygems'\nrequire 'railsless-deploy'\n</code></pre>\n<p>After that, it was just a matter of using the recipes we typically use. Now, after we get the plugins we're developing ready to be deployed, all we have to do is</p>\n<pre><code>$ cap deploy\n</code></pre>\n<p>Capistrano makes life so much easier!</p>\n",
			"date_published": "2009-08-28T12:44:09Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2009-01-25-because-im-a-geek/",
			"url": "https://waynegraham.github.io/posts/2009-01-25-because-im-a-geek/",
			"title": "Because I&#39;m a Geek",
			"content_html": "<p>Saw this shirt and it made me laugh. Then I got out a pencil (because I'm a geek) and solved it :)</p>\n<pre class=\"language-latex\" tabindex=\"0\"><code class=\"language-latex\">y = int<span class=\"token punctuation\">{</span>10<span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span>13<span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span>dx<span class=\"token punctuation\">}</span>(2x)</code></pre>\n<p>Who say's math majors can't be funny!</p>\n",
			"date_published": "2009-01-25T22:01:51Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2009-01-16-rdesktop-and-tcltk/",
			"url": "https://waynegraham.github.io/posts/2009-01-16-rdesktop-and-tcltk/",
			"title": "rdesktop and Tcl/tk",
			"content_html": "<p>This is something I did a few years ago and has been very useful. I'm a *nix admin that occasionally needs to log on to a Windows server. I used rdesktop for a long time to do this. I wanted, though, a nice GUI that would allow me to pick which server I wanted (and an excuse to play a bit with Tcl). This is the script I came up with to do just this:</p>\n<pre class=\"language-ruby\" tabindex=\"0\"><code class=\"language-ruby\"><span class=\"token comment\">#! /usr/bin/wish</span>\n\nwm title <span class=\"token punctuation\">.</span> <span class=\"token string-literal\"><span class=\"token string\">\"Remote Desktop Launcher\"</span></span>\n\nframe <span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span>borderwidth <span class=\"token number\">10</span>\npack <span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span>side top <span class=\"token operator\">-</span>fill x\n\nbutton <span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">.</span>quit <span class=\"token operator\">-</span>text Quit <span class=\"token operator\">-</span>command exit\nset but <span class=\"token punctuation\">[</span>button <span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">.</span>run <span class=\"token operator\">-</span>text <span class=\"token string-literal\"><span class=\"token string\">\"Launch\"</span></span> <span class=\"token operator\">-</span>command Run<span class=\"token punctuation\">]</span>\npack <span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">.</span>quit <span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">.</span>run <span class=\"token operator\">-</span>side right\n\nlabel <span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">.</span>l <span class=\"token operator\">-</span>text Server<span class=\"token operator\">:</span> <span class=\"token operator\">-</span>padx <span class=\"token number\">0</span>\nentry <span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">.</span>cmd <span class=\"token operator\">-</span>width <span class=\"token number\">20</span> <span class=\"token operator\">-</span>relief sunken <span class=\"token operator\">-</span>textvariable server\npack <span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">.</span>l <span class=\"token operator\">-</span>side left\npack <span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">.</span>cmd <span class=\"token operator\">-</span>side left <span class=\"token operator\">-</span>fill x <span class=\"token operator\">-</span>expand <span class=\"token boolean\">true</span>\n\nbind <span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">.</span>cmd <span class=\"token operator\">&amp;</span>amp<span class=\"token operator\">&lt;</span>Return<span class=\"token operator\">&amp;</span>amp<span class=\"token operator\">></span> Run\nfocus <span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">.</span>cmd\n\nmenubutton <span class=\"token punctuation\">.</span>mb <span class=\"token operator\">-</span>text Server <span class=\"token operator\">-</span>menu <span class=\"token punctuation\">.</span>mb<span class=\"token punctuation\">.</span>menu\npack <span class=\"token punctuation\">.</span>mb <span class=\"token operator\">-</span>padx <span class=\"token number\">10</span> <span class=\"token operator\">-</span>pady <span class=\"token number\">10</span>\n\nset m <span class=\"token punctuation\">[</span>menu <span class=\"token punctuation\">.</span>mb<span class=\"token punctuation\">.</span>menu <span class=\"token operator\">-</span>tearoff <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token variable\">$m</span> add radio <span class=\"token operator\">-</span>label server1 <span class=\"token operator\">-</span>variable server <span class=\"token operator\">-</span>value server1<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">.</span>edu <span class=\"token operator\">-</span>command Run\n<span class=\"token variable\">$m</span> add radio <span class=\"token operator\">-</span>label server2 <span class=\"token operator\">-</span>variable server <span class=\"token operator\">-</span>value server2<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">.</span>edu <span class=\"token operator\">-</span>command Run\n<span class=\"token variable\">$m</span> add radio <span class=\"token operator\">-</span>label server3 <span class=\"token operator\">-</span>variable server <span class=\"token operator\">-</span>value server3<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">.</span>edu <span class=\"token operator\">-</span>command Run\n<span class=\"token variable\">$m</span> add radio <span class=\"token operator\">-</span>label server4 <span class=\"token operator\">-</span>variable server <span class=\"token operator\">-</span>value server4<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">.</span>edu <span class=\"token operator\">-</span>command Run\n<span class=\"token variable\">$m</span> add radio <span class=\"token operator\">-</span>label server5 <span class=\"token operator\">-</span>variable server <span class=\"token operator\">-</span>value server5<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">.</span>edu <span class=\"token operator\">-</span>command Run\n\nproc Run <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n    global server\n    exec rdesktop <span class=\"token operator\">-</span>u <span class=\"token operator\">&amp;</span>amp<span class=\"token operator\">&lt;</span>user_name<span class=\"token operator\">&amp;</span>amp<span class=\"token operator\">></span> <span class=\"token operator\">-</span>p <span class=\"token operator\">&amp;</span>amp<span class=\"token operator\">&lt;</span>password<span class=\"token operator\">&amp;</span>amp<span class=\"token operator\">></span> <span class=\"token operator\">-</span>g <span class=\"token number\">1280</span>x800 <span class=\"token operator\">-</span>x b <span class=\"token variable\">$server</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>All you need to do is plugin \"real\" values for the server and addresses. You can also auto-login by giving values for the username and password (may also want to change the geometry of the window unless you have a big screen).</p>\n<p><a href=\"http://www.liquidfoot.com/wp-content/uploads/2009/01/rdesktop.png\"><img class=\"alignnone size-medium wp-image-246\" title=\"rdesktop\" src=\"http://www.liquidfoot.com/wp-content/uploads/2009/01/rdesktop-300x202.png\" alt=\"rdesktop\" width=\"300\" height=\"202\"></a></p>\n<p>I also have bash aliases for these, but that's a different post...</p>\n",
			"date_published": "2009-01-16T14:36:17Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2009-01-15-sherlockopensearch-plugins-for-libraries/",
			"url": "https://waynegraham.github.io/posts/2009-01-15-sherlockopensearch-plugins-for-libraries/",
			"title": "Sherlock/OpenSearch Plugins for Libraries",
			"content_html": "<p>Back in the day, I used to work on the <a href=\"http://mycroft.mozdev.org/\">Mycroft Project</a>. At the time, only Firefox/Netscape could actually used these plugins as they were based on Apple's Sherlock specification (Mycroft is Sherlock Holmes' brother, btw). These plugins have been a staple in the Firefox browser, but the Sherlock spec was a little arcane. More recently, both Firefox and IE have implemented support for the <a href=\"http://www.opensearch.org/Home\">OpenSearch specification</a>. I have to say that the OpenSearchDescription is a significant update (at least from a readability standpoint) than Sherlock.</p>\n<p>A few years ago, I had written a bunch of Sherlock plugins for <a href=\"http://swem.wm.edu/resources/tools/\">searching various library</a> catalogs. Those pretty much lay dormant until I was talking with my student worker this last semester and he got quite excited about these, and wondered if there might be a way to also search the databases the library subscribes to, and provide off-campus access to these through our proxy server. This code is in a very basic stage right now, but essentially what I did was create a database driven application in PHP that generates OpenSearch XML for various targets to search against.</p>\n<p>Right now, this only supports HTTP GET requests (POST parameters require an additional table), but here's the DDL:</p>\n<pre class=\"language-sql\" tabindex=\"0\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>plugins<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>short_name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>description<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>engine<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>image<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>input_encoding<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>url<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">550</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>method<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">default</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>proxy<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">tinyint</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">default</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>engine_index<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>engine<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">KEY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>short_name_index<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>short_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>latin1</code></pre>\n<p>You don't need all of these fields for every record, and here is some useful records...</p>\n<pre class=\"language-sql\" tabindex=\"0\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> plugins <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> short_name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">engine</span><span class=\"token punctuation\">,</span> input_encoding<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> proxy<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' JStor'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'jstor'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.jstor.org/action/doBasicSearch?Query='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> plugins <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> short_name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">engine</span><span class=\"token punctuation\">,</span> input_encoding<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> proxy<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Google Your University'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.google.com/univ/wm?hl=en&amp;amp;ie=ISO-8859-1&amp;amp;btnG=Google+Search&amp;amp;q='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> plugins <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> short_name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">engine</span><span class=\"token punctuation\">,</span> input_encoding<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> proxy<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Google Scholar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'googlescholar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://scholar.google.com/scholar?&amp;amp;hl=en&amp;amp;lr=&amp;amp;btnG=Search&amp;amp;q='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> plugins <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> short_name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">engine</span><span class=\"token punctuation\">,</span> input_encoding<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> proxy<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ebrary'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ebrary'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://site.ebrary.com/lib//Top?layout=search&amp;amp;nosr=1&amp;amp;sch=sch&amp;amp;frm=smp.x&amp;amp;p00='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> plugins <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> short_name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">engine</span><span class=\"token punctuation\">,</span> input_encoding<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> proxy<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'EbscoHost'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ebsco'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://search.ebscohost.com/login.aspx?db=aph&amp;amp;direct=true&amp;amp;bQuery='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> plugins <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> short_name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">engine</span><span class=\"token punctuation\">,</span> input_encoding<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> proxy<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'LexisNexis'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lexisnexis'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.lexisnexis.com/us/lnacademic/search/homesubmitForm.do'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> plugins <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> short_name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">engine</span><span class=\"token punctuation\">,</span> input_encoding<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> proxy<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Proquest UMI'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'umi'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://proquest.umi.com/pqdweb?RQT=305&amp;amp;FT=1&amp;amp;DBId=414&amp;amp;SQ='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> plugins <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> short_name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">engine</span><span class=\"token punctuation\">,</span> input_encoding<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> proxy<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Science Direct'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sciencedirect'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.sciencedirect.com/science/quicksearch?query='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Apparently I wrote the queries with MDB2, I've since moved most of my interactions to Zend Db (you should be able to write that part pretty quickly) and just dump the names of the plugins in the tableon a view:</p>\n<pre class=\"language-php\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$plugins</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$plugin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'&lt;li>'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$plugin</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'short_name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">': '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">' &lt;a href=\"openSearch.php?id='</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$plugin</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'\">&lt;img src=\"images/a9.png\" title=\"OpenSearch\" />&lt;/a>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$plugin</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'url'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">' &lt;a href=\"search.php?engine='</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$plugin</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'engine'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'&amp;amp;q=regulators\">test search'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">' | &lt;a href=\"#\" title=\"Ref: '</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$plugin</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'engine'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'\" onClick=\"addOpenSearch(\\''</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$plugin</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'engine'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'\\', \\'gif\\', \\'Education\\', \\''</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$plugin</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'\\'); return false;\">add&lt;/a>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'&lt;/li>);\n\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">endforeach</span><span class=\"token punctuation\">;</span></code></pre>\n<p>The add code is straight-forward</p>\n<pre class=\"language-php\" tabindex=\"0\"><code class=\"language-php\">$result = $result[0];\n\n$short_name = $result['short_name'];\n$description = $result['description'];\n$engine = $result['engine'];\n$id = $result['id']; \n\n$xml = &lt;&lt;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>EOT</span>\n<span class=\"token attr-name\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span>xml version<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"UTF-8\"</span><span class=\"token delimiter important\">?></span></span></span>\n<span class=\"token attr-name\">&lt;OpenSearchDescription</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://a9.com/-/spec/opensearch/1.1/<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>moz</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.mozilla.org/2006/browser/search/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ShortName</span><span class=\"token punctuation\">></span></span>$short_name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ShortName</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Description</span><span class=\"token punctuation\">></span></span>$description<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Description</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Url</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>get<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">template</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://&lt;your_server>/plugins/proxy.php?engine=$engine<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>q=<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Contact</span><span class=\"token punctuation\">></span></span>libsys@wm.edu<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Contact</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>16<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>16<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>http://<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>your_server</span><span class=\"token punctuation\">></span></span>/favicon.ico<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Image</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Developer</span><span class=\"token punctuation\">></span></span>Wayne Graham<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Developer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>InputEncoding</span><span class=\"token punctuation\">></span></span>UTF-8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>InputEncoding</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">moz:</span>SearchForm</span><span class=\"token punctuation\">></span></span>http://<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>your_server</span><span class=\"token punctuation\">></span></span>/plugins/search.php?engine=$engine<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">moz:</span>SearchForm</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">moz:</span>UpdateUrl</span><span class=\"token punctuation\">></span></span>http://<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>your_server</span><span class=\"token punctuation\">></span></span>/plugins/opensearch.php?$id<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">moz:</span>UpdateUrl</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">moz:</span>IconUpdateUrl</span><span class=\"token punctuation\">></span></span>http://swem.wm.edu/favicon.ico<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">moz:</span>IconUpdateUrl</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">moz:</span>UpdateInterval</span><span class=\"token punctuation\">></span></span>7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">moz:</span>UpdateInterval</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>OpenSearchDescription</span><span class=\"token punctuation\">></span></span>\nEOT;\nheader(\"Content-Type: text/xml\");\necho($xml);</code></pre>\n<p>You just need a little JavaScript to add this in to IE and Firefox:</p>\n<pre class=\"language-javascript\" tabindex=\"0\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">addOpenSearch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span>ext<span class=\"token punctuation\">,</span>cat<span class=\"token punctuation\">,</span>pid<span class=\"token punctuation\">,</span>meth</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>external <span class=\"token operator\">==</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">038</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">038</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>external<span class=\"token punctuation\">.</span>AddSearchProvider <span class=\"token operator\">==</span> <span class=\"token string\">\"unknown\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>external<span class=\"token punctuation\">.</span>AddSearchProvider <span class=\"token operator\">==</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// See bugs 430058/430067/430070 for Camino</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>external<span class=\"token punctuation\">.</span>AddSearchProvider <span class=\"token operator\">==</span> <span class=\"token string\">\"unknown\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>navigator<span class=\"token punctuation\">.</span>vendor <span class=\"token operator\">==</span> <span class=\"token string\">'Camino'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">038</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">038</span><span class=\"token punctuation\">;</span> meth <span class=\"token operator\">==</span> <span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This plugin uses POST which is not currently supported by your browser's implementation of OpenSearch.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      window<span class=\"token punctuation\">.</span>external<span class=\"token punctuation\">.</span><span class=\"token function\">AddSearchProvider</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://&lt;your_server>/plugins/install.php?id=\"</span> <span class=\"token operator\">+</span> pid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You will need a browser which supports OpenSearch to install this plugin.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>If I get some time soon, I'll wrap this up into a package; rudimentary, but a decent start to your own app!</p>\n",
			"date_published": "2009-01-15T17:34:12Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2009-01-15-library-search-google-gadget/",
			"url": "https://waynegraham.github.io/posts/2009-01-15-library-search-google-gadget/",
			"title": "Library Search Google Gadget",
			"content_html": "<p>I've been going through a bunch of old stuff I've written as I clean up things. There will be a rash of posts where I take code I've written in different projects to see how things work and that are potentially useful, just no implemented in anything that I may need in the future. The first one here is some code for a Google gadget I wrote to search our online catalog a few years ago when the API was released.</p>\n<p>If you're not one of the of the cool kids who uses <a href=\"http://www.google.com/ig\">iGoogle</a>, you'll need to set yourself up to use this code. I just looked at the <a href=\"http://code.google.com/apis/gadgets/docs/dev_guide.html\">developer's guide</a>, and it seems a bit more fleshed out than it was when I first took a whack at the code :) The really cool thing about these gadgets is that they are essentailly just an XML file with some JavaScript/HTML thrown in.</p>\n<p>I thought it might be a nice feature to just provide a search box for people to launch a catalog search. This is just a simple HTML form.</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”_parent”</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”searchform”</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”http://lion.wm.edu/uhtbin/cgisirsi/0/0/057/5”</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”searchform”</span><span class=\"token punctuation\">></span></span> \n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”searchInput”</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token value css language-css\"><span class=\"token property\">”width</span><span class=\"token punctuation\">:</span></span></span></span> <span class=\"token attr-name\">100%;”</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”searchdata1”</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”text”</span> <span class=\"token attr-name\">accesskey</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”f”</span> <span class=\"token punctuation\">/></span></span> \n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”library”</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”library”</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”hidden”</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”SWEM”</span> <span class=\"token punctuation\">/></span></span> \n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”user_id”</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”user_id”</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”hidden”</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”SWEPUB”</span> <span class=\"token punctuation\">/></span></span> \n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”sourceid”</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”sourceid”</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”hidden”</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>”gadget”</span> <span class=\"token punctuation\">/></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>This is just HTML code that you would use on any search page. Nothing fancy. Now on to creating the gadget..</p>\n<p>There are two parts to the XML code for the spec. The root node (Module) has two elements, ModulePrefs and Content. The ModulePrefs element is relatively straight-forward:</p>\n<pre class=\"language-xml\" tabindex=\"0\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ModulePrefs</span>\n  <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Swem Catalog Search<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>40<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">description</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Search Swem's online catalog from iGoogle<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">author</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Wayne Graham<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">author_email</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dontspamme@gmail.com<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">screenshot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">author_location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Williamsburg, Virginia<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">title_url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://swem.wm.edu<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">Require</span> <span class=\"token attr-name\">feature</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>analytics<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p>The attributes of the ModulePrefs element (title, height, description, etc.) should be pretty self explanitory. I wanted to be able to track usage of the gadget, so I eneabled Google analytics for the widget by requiring the analytics feature. Now for the meat.</p>\n<p>What I did was write a short CSS definition and some JavaScript to actually display a form in the Content element of the Module.</p>\n<pre class=\"language-xml\" tabindex=\"0\"><code class=\"language-xml\">\n\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Content</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token cdata\">&lt;![CDATA[\n&lt;style>\n    #subLibrary {\n        font-family:arial, sans-serif;\n        font-size:10px;\n        color:#676767;\n    }\n    #link {\n        font-family:Garamond, serif;\n        font-size:32px;\n        color:black;\n        text-decoration:none;\n    }\n    #searchGoButton {\n        font-weight:bold;\n    }\n&lt;/style>\n&lt;script>\nfunction displaySearchBar (prefs) {\n    var lang = prefs.getString(\"mylang\");\n\n    if (lang == \"\") {\n        lang = prefs.getString(\".lang\");\n    }\n\n    var html =\n        '&lt;form target=\"_parent\" name=\"searchform\" action=\"http://lion.wm.edu/uhtbin/cgisirsi/0/0/0/57/5\" id=\"searchform\">' +\n        '&lt;table style=\"width:100%\">' +\n        '&lt;tr>' +\n        '&lt;td style=\"padding-bottom:4px\">' +\n        '&lt;a target=\"_parent\" id=\"link\" href=\"http://lion.wm.edu/uhtbin/webcat\">Catalog&lt;/a>' +\n        '&lt;span style=\"vertical-align: sub;\">Swem&lt;/span>' +\n        '&lt;/td>' +\n        '&lt;td width=100%>' +\n        '&lt;input id=\"searchInput\" style=\"width:100%\" name=\"searchdata1\" type=\"text\" accesskey=\"f\" value=\"\" />' +\n        '&lt;input id=\"library\" name=\"library\" type=\"hidden\" value=\"SWEM\" />' +\n        '&lt;input id=\"user_id\" name=\"user_id\" type=\"hidden\" value=\"SWEPUB\" />' +\n        '&lt;input id=\"sourceid\" name=\"sourceid\" type=\"hidden\" value=\"gadget\" />' +\n        '&lt;/td>' +\n        '&lt;td>' +\n        '&lt;input type=\"submit\" name=\"go\" id=\"searchGoButton\" value=\"Search\" />' +\n        '&lt;/td>' +\n        '&lt;td>' +\n        '&amp;amp;amp;amp;nbsp;' +\n        '&lt;/td>' +\n        '&lt;/tr>' +\n        '&lt;/table>'\n        '&lt;form>';\n    document.write(html);\n}\n\ndisplaySearchBar(new _IG_Prefs(__MODULE_ID__));\n_IG_Analytics(\"analytics-id\", \"/google-gadget\");\n&lt;/script>\n]]></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Content</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Once you're done, you can test everything with the directions on the <a href=\"http://code.google.com/apis/gadgets/docs/tools.html\">Developer Tools page</a>. There are even really nice resources to tell you how to <a href=\"http://code.google.com/apis/gadgets/docs/tools.html#Host\">host this on Google Code</a>.</p>\n<p>As a finished product, this is what the gadget looks like in iGoogle:</p>\n<img class=\"alignnone size-medium wp-image-235\" title=\"gadget\" src=\"http://www.liquidfoot.com/wp-content/uploads/2009/01/gadget-300x46.png\" alt=\"gadget\" width=\"300\" height=\"46\">\n<p>For the folks that use iGoogle as their home page, this can be valuable tool for them. Next up, I need to brush off my code for generating Sherlock/Opensearch extensions for Firefox and IE...</p>\n",
			"date_published": "2009-01-15T14:26:18Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2009-01-06-what-is-a-database/",
			"url": "https://waynegraham.github.io/posts/2009-01-06-what-is-a-database/",
			"title": "What Is a Database?",
			"content_html": "<p>After working on a couple of different projects over the years that lent themselves to using a database, it seems a lot of people have some misconceptions of what exactly a database is...or what it does. Many have confused data stores and databases (when they really mean a database management system -- but not necessarily in a relational model flavor). When they want to build a database, I've found many using the wrong tools (e.g. spreadsheets) and find themselves heading down a road full of headaches that can be time consuming to deal with.</p>\n<p>Most of the people I've worked with have a basic understanding of the fact that a database is a store of information. While Excel (and other spreadsheet programs) can do really useful things like crunch numbers and even filter information and do basic lookups (like a database system), there are a few other things they can't do that makes this perhaps not the best way to proceed in a project that needs to collect a lot of information. I'll start this as a first installment on using database management systems for research.</p>\n<p>If you can believe it, database systems still adhere to the 13 rules outlined in E. F. Codd's paper &quot;<a href=\"http://dx.doi.org/10.1145%2F362384.362685\"><em>A Relational Model of Data for Large Shared Data Banks</em></a>&quot; written in 1969 while Codd was at IBM (and republished in 1970 in <a href=\"http://dx.doi.org/10.1145%2F362384.362685\">Communications of the ACM</a>). These rules are commonly referred to as Codd's 12 rules (numbered 0 - 12). So, here are the rules (I'll explain them in a bit more detail later).</p>\n<ul>\n\t<li>Rule 0: The system must qualify as relational, as a database, and as a management system.</li>\n\t<li>Rule 1: All information in the database is to be represented in one and only one way, namely by values in column positions within rows of tables.</li>\n\t<li>Rule 2: All data must be accessible with no ambiguity.</li>\n\t<li>Rule 3: The database management system must allow each field to remain null (or empty). Specifically, it must support a representation of \"missing information and inapplicable information\" that is systematic, distinct from all regular values, and independent of data type.</li>\n\t<li>Rule 4: The system must support an online, inline, relational catalog that is accessible to authorized users by means of their regular query language.</li>\n\t<li>Rule 5: The system must support at least one relational language that\n<ol>\n\t<li>Has a linear syntax</li>\n\t<li>Can be used both interactively and without application programs</li>\n\t<li>Supports data definition operations (including view definitions), data manipulation operations (update and retrieve), security and data integrity constraints, and transaction management operations.</li>\n</ol>\n</li>\n\t<li>Rule 6: All views that are theoretically updateable must be updateable by the system.</li>\n\t<li>Rule 7: The system must support set-at-a-time insert, update, and delete operators.</li>\n\t<li>Rule 8: Changes to how the data is stored (its physical level) must not require a change to an application based on the structure.</li>\n\t<li>Rule 9: Changes to the logical level (tables, columns, rows, etc) must not require a change to an application based on the structure.</li>\n\t<li>Rule 10: Integrity constraints must be specified separately from application programs and stored in the catalog.</li>\n\t<li>Rule 11: The distribution of portions of the database to various locations should be invisible to users of the database.</li>\n\t<li>Rule 12: If the system provides a low-level (record-at-a-time) interface, then that interface cannot be used to subvert the system.</li>\n</ul>\nThere are a bunch of different database managers out there. Most likely you even have at least one already on your computer (Firefox uses <a title=\"SQLite\" href=\"http://www.sqlite.org/\">SQLite</a>). Depending on what you need to do, and how much money you're willing to invest, and the scope of your project, there are an amazing array of products of there. This is a brief list of some of the most popular:\n<ul>\n\t<li><a href=\"http://www.mysql.com/\">MySQL</a> (free): Very popular with web developers; was initially developed for speed over features, but has become very feature rich, though it does require programming to develop an interface</li>\n\t<li><a href=\"http://www.postgresql.org/\">PostgreSQL</a> (free): Feature-rich database system great for large-scale projects that will handle millions of connections easily; usually overkill for small projects</li>\n\t<li><a href=\"http://db.apache.org/derby/\">Apache Derby</a>/<a href=\"http://developers.sun.com/javadb/\">Java DB</a> (free): Pure Java relational database management system;</li>\n\t<li><a href=\"http://office.microsoft.com/en-us/access/default.aspx\">Microsoft Access</a>: In a lot of corporate Office deployments; not good for projects with multiple users though</li>\n\t<li><a href=\"http://dba.openoffice.org/\">OpenOffice Base</a> (free): Comes bundled with <a href=\"http://hsqldb.org/\">HSQLDB</a>, but also allows you to use MySQL and PostgreSQL.</li>\n\t<li><a href=\"http://couchdb.apache.org/\">CouchDB</a> (free): Kind of different than the rest in that it is a document-oriented database; it doesn't contain a specific schema, but allows you to create ad-hoc, distributed, RESTful access to information. It's not a relational database management system, but does provide some extra flexability to add \"stuff\" to a data store quickly.</li>\n</ul>\nNext up, designing tables so you can get stuff back out easily...\n",
			"date_published": "2009-01-06T18:13:01Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-12-17-it-works/",
			"url": "https://waynegraham.github.io/posts/2008-12-17-it-works/",
			"title": "It Works!",
			"content_html": "<p>With my departure from W&amp;M we talked about the deployment of the second Sun X4500 for the library. My original plan was to wait until the 10/08 system came out (which had the SAMBA stuff in the kernel) and then deploy the hardware with ZFS and Z-RAID. However, no one else really has any experience with either administering SAMBA or Solaris. I had read that Windows could be installed on these servers. It's a bit of a sacrilege, but it should help out until they find a replacement.</p>\n<p>The Sun Installation Assistant CD really took all the work out of setting the thing up...it includes all the required drivers for the hard drives and NIC. Took a while since I was redirecting the KVM through the ILOM and sharing my ROM drive. Everything went very well, but I did notice that the OS I installed (Windows 2003 R2 Standard) has a limit of 4GB. I couldn't for the life of me figure out what happend to the other 12GB. Been in *nix too long and forgot that Microsoft puts limits on the amount of RAM a server can support. I just need to reinstall with Enterprise edition. Not a huge deal, but it's one of those things I wish I would have known/remembered.</p>\n<p>I did set up a &quot;test&quot; share (it's primarily to give our media center access to a lot of storage), but I ran into an issue(s) with OS X. Seems the mount would take, but you can't see any of the files. You can move files to the server, but they don't show up.</p>\n<p>I think the bandwidth should be ok coming from the media center. There's full gigE from the desktop to the server and I ganged the NICs.</p>\n<p>I wished I could have used the Z-RAID, and I'm not sure that the Windows Dynamic RAID-5 will do quite the same job, but it's a step forward in getting some storage (and not attached hard drives) for media production.</p>\n",
			"date_published": "2008-12-18T01:39:13Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-11-21-updated-xsl-for-mods/",
			"url": "https://waynegraham.github.io/posts/2008-11-21-updated-xsl-for-mods/",
			"title": "Updated XSL for MODS",
			"content_html": "<p>David noticed that not all the authors were being inserted into the database. I looked at it and it turns out that an author can have an arbitrary number of given names to handle the inclusion of middle names. I had thought I was only pulling the first node, but it turns out I wasn't and the SQL to insert the authors with was erroring out so there were a lot of citations without authors.</p>\n<p>I went back in and modified the XSLT that was processing the given names to now read:</p>\n<pre class=\"language-xml\" tabindex=\"0\"><code class=\"language-xml\">\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>variable</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ref_id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@ID<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>variable</span><span class=\"token punctuation\">></span></span>\n...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>for-each</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  INSERT INTO authors (id, ref_id, given, family, role)\n  VALUES(\n      UUID(),\n      <span class=\"token comment\">&lt;!--(SELECT id FROM citations ORDER BY added desc limit 1),--></span>\n      '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$ref_id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>',\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>for-each</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>for-each</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>namePart[@type='given']<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>text</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>text</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>for-each</span><span class=\"token punctuation\">></span></span>',\n  \n          '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>namePart[@type='family']<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>',\n          '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>role/roleTerm<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>'\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>for-each</span><span class=\"token punctuation\">></span></span>\n      );\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>for-each</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>It looked like the SQL to grab the last item didn't always return a record for whatever reason (a locking issue?). Since there was already a key in the field, I just switched over to use that in the inserts. Still need to go through and regularize the fields so MySQL isn't attempting to pull a foreign key index on a variable width field, but this is an update to yesterday's code.</p>\n",
			"date_published": "2008-11-21T18:57:09Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-11-20-gmail-ninjas/",
			"url": "https://waynegraham.github.io/posts/2008-11-20-gmail-ninjas/",
			"title": "GMail Ninjas",
			"content_html": "<p>I really dig the new themes in Google...I finally have ninjas :)</p>\n<p><a href=\"http://www.liquidfoot.com/wp-content/uploads/2008/11/ninjas.png\"><img class=\"alignnone size-full wp-image-137\" title=\"ninjas\" src=\"http://www.liquidfoot.com/wp-content/uploads/2008/11/ninjas.png\" alt=\"\" width=\"163\" height=\"276\"></a></p>\n",
			"date_published": "2008-11-21T01:23:43Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-11-19-endnote-migration/",
			"url": "https://waynegraham.github.io/posts/2008-11-19-endnote-migration/",
			"title": "EndNote Migration",
			"content_html": "<p>I've been working with the folks over at the <a href=\"http://web.wm.edu/wmcar/\">Center for Archaeological Research</a> with a bibliography of their research reports. It's a bit of an offshoot of the NEH Slave Quarters research I've been working on, but I wanted to have a way to work through their research reports, just to have an idea of what they have available.</p>\n<p>The first thing I did is get them to give me the file in the crappy EndNote XML format. I was having issues bringing it into Zotero, so I installed the bibutils package (sudo apt-get install bibutils) and then ran the endx2xml program on it. This created a nice MODS file for me to start crunching on. What I wanted to do is make a tag cloud using some of the categories they created. I created a database with two tables to store the citation and author information. I'm on my development box, so this is MySQL</p>\n<pre class=\"language-sql\" tabindex=\"0\"><code class=\"language-sql\"><span class=\"token comment\">--</span>\n<span class=\"token comment\">-- Create schema archaeology</span>\n<span class=\"token comment\">--</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> archaeology<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">USE</span> archaeology<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--</span>\n<span class=\"token comment\">-- Definition of table `archaeology`.`authors`</span>\n<span class=\"token comment\">--</span>\n\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>archaeology<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>authors<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>archaeology<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>authors<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>citation_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>given<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>family<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>role<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>latin1<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--</span>\n<span class=\"token comment\">-- Definition of table `archaeology`.`citations`</span>\n<span class=\"token comment\">--</span>\n\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>archaeology<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>citations<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>archaeology<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>citations<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>ref_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>title<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>year<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>publisher<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>added<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">timestamp</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>genre<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>subject<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>latin1<span class=\"token punctuation\">;</span></code></pre>\n<p>I next needed to write the XSLT to actually transform the modsCollection into the schema. I haven't worked with XSLT in a while and was (very) rusty :) Here's a sampling of the output of converting the EndNote XML to MODS</p>\n<pre class=\"language-xml\" tabindex=\"0\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>modsCollection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mods</span> <span class=\"token attr-name\">ID</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Andre2007a<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>titleInfo</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Heritage Education and Interpretive Plan for the Smith River Blueway and Pedestrian Trails, Henry County, Virginia<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>titleInfo</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>personal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>namePart</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>given<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Elizabeth<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>namePart</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>namePart</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Andre<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>namePart</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>role</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>roleTerm</span> <span class=\"token attr-name\">authority</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>marcrelator<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>author<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>roleTerm</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>role</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>personal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>namePart</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>given<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Stephanie<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>namePart</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>namePart</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Sapp<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>namePart</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>role</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>roleTerm</span> <span class=\"token attr-name\">authority</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>marcrelator<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>author<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>roleTerm</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>role</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>originInfo</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dateIssued</span><span class=\"token punctuation\">></span></span>2007<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dateIssued</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>publisher</span><span class=\"token punctuation\">></span></span>William and Mary Center for Archaeological Research, Williamsburg, Virginia. <span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>nbsp;<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>nbsp;<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>nbsp;<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>nbsp; Submitted to Virginia Department of Historic Resources, Roanoke<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>publisher</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>originInfo</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>typeOfResource</span><span class=\"token punctuation\">></span></span>text<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>typeOfResource</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>genre</span><span class=\"token punctuation\">></span></span>report<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>genre</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>subject</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>topic</span><span class=\"token punctuation\">></span></span>06-25/L-WMCAR Reports/Henry Co/Interp/18th/19th/20th/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>topic</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>subject</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>identifier</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>citekey<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Andre2007a<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>identifier</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mods</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mods</span> <span class=\"token attr-name\">ID</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Andre2007b<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>titleInfo</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Architectural Evaluation of the Anderson Farm (047-0034-0010) for the Proposed Anderson-Hughes Development Project in Norge, Virginia<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>titleInfo</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>personal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>namePart</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>given<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Elizabeth<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>namePart</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>namePart</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>given<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>M<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>namePart</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>namePart</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Andre<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>namePart</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>role</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>roleTerm</span> <span class=\"token attr-name\">authority</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>marcrelator<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>author<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>roleTerm</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>role</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>originInfo</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dateIssued</span><span class=\"token punctuation\">></span></span>2007<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dateIssued</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>publisher</span><span class=\"token punctuation\">></span></span>William and Mary Center for Archaeological Research, Williamsburg, Virginia. <span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>nbsp;<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>nbsp;<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>nbsp;<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>nbsp; Submitted to Anderson-Hughes, LLC, Newport News, Virginia<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>publisher</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>originInfo</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>typeOfResource</span><span class=\"token punctuation\">></span></span>text<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>typeOfResource</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>genre</span><span class=\"token punctuation\">></span></span>report<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>genre</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>subject</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>topic</span><span class=\"token punctuation\">></span></span>07-22/L-WMCAR Reports/ARCeval/19th/20th/James City Co/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>topic</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>subject</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>identifier</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>citekey<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Andre2007b<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>identifier</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mods</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>modsCollection</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>What I wanted to do is take each citation and insert it into the database, then relate the last-entered citation with its authors. At first I thought I could use MySQL's last_insert_id() function...turns out those are only for auto-increment fields and I always use UUIDs for primary keys. What I ended up doing is adding in the added field with a timestamp (with a default value of CURRENT_TIMESTAMP). Then, I just went through the nodes and put the data where it needed to go.</p>\n<pre class=\"language-xml\" tabindex=\"0\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>stylesheet</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsl</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/1999/XSL/Transform<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>output</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>strip-space</span> <span class=\"token attr-name\">elements</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>template</span> <span class=\"token attr-name\">match</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  DELETE FROM citations;\n  DELETE FROM authors;\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>for-each</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modsCollection/mods<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    INSERT INTO citations ( id, ref_id, title, year, publisher, genre, subject)\n    VALUES (\n    UUID(),\n    '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@ID<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>',\n    '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>call-template</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>escapesinglequotes<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>with-param</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>arg1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>titleInfo/title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>with-param</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>call-template</span><span class=\"token punctuation\">></span></span>',\n    '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>originInfo/dateIssued<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>',\n    '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>call-template</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>escapesinglequotes<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>with-param</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>arg1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>originInfo/publisher<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>with-param</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>call-template</span><span class=\"token punctuation\">></span></span>',\n    '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>genre<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>',\n    '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>call-template</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>escapesinglequotes<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>with-param</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>arg1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>subject/topic<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>with-param</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>call-template</span><span class=\"token punctuation\">></span></span>'\n    );\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>for-each</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      INSERT INTO authors (id, citation_id, given, family, role)\n      VALUES(\n      UUID(),\n      (SELECT id FROM citations ORDER BY added desc limit 1),\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>for-each</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>namePart[@type='given']<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span> ',\n      '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>namePart[@type='family']<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>',\n      '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>role/roleTerm<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>'\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>for-each</span><span class=\"token punctuation\">></span></span>\neach\n    );\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>for-each</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>for-each</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>template</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>template</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>escapesinglequotes<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>param</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>arg1<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>variable</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>apostrophe<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>'<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>variable</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>choose</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>when</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>contains($arg1, $apostrophe)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string-length(normalize-space(substring-before($arg1, $apostrophe))) > 0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>substring-before($arg1, $apostrophe)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">disable-output-escaping</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>''<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>if</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>call-template</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>escapesinglequotes<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>with-param</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>arg1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>substring-after($arg1, $apostrophe)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">disable-output-escaping</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>with-param</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>call-template</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>when</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- No quotes found in string, just print it --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>when</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string-length(normalize-space($arg1)) > 0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>normalize-space($arg1)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>when</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>choose</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>template</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>stylesheet</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>I noticed that I also had to write a template to escape single quotes in the title, publisher, and topic because of some possesive language in those fields. It took the longest time to actually write the code for that (like I said, I was really rusty and forgot all about XSL branching).</p>\n<p>In the end, what gets generated is a nice SQL script (this one pushes 30,000 lines) like this</p>\n<pre class=\"language-sql\" tabindex=\"0\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> citations<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> authors<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> citations <span class=\"token punctuation\">(</span> id<span class=\"token punctuation\">,</span> ref_id<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">,</span> publisher<span class=\"token punctuation\">,</span> genre<span class=\"token punctuation\">,</span> subject<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>\n  UUID<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Andre2007a'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Heritage Education and Interpretive Plan for the Smith River Blueway and Pedestrian Trails, Henry County, Virginia'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'2007'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'William and Mary Center for Archaeological Research, Williamsburg, Virginia. Submitted to Virginia Department of Historic Resources, Roanoke'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'report'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'06-25/L-WMCAR Reports/Henry Co/Interp/18th/19th/20th/'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> authors <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> citation_id<span class=\"token punctuation\">,</span> given<span class=\"token punctuation\">,</span> family<span class=\"token punctuation\">,</span> role<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span>\nUUID<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> id <span class=\"token keyword\">FROM</span> citations <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> added <span class=\"token keyword\">desc</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Elizabeth '</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Andre'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'author'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> authors <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> citation_id<span class=\"token punctuation\">,</span> given<span class=\"token punctuation\">,</span> family<span class=\"token punctuation\">,</span> role<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span>\nUUID<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> id <span class=\"token keyword\">FROM</span> citations <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> added <span class=\"token keyword\">desc</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Stephanie '</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Sapp'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'author'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> citations <span class=\"token punctuation\">(</span> id<span class=\"token punctuation\">,</span> ref_id<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">,</span> publisher<span class=\"token punctuation\">,</span> genre<span class=\"token punctuation\">,</span> subject<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>\nUUID<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Andre2007b'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Architectural Evaluation of the Anderson Farm (047-0034-0010) for the Proposed Anderson-Hughes Development Project in Norge, Virginia'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'2007'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'William and Mary Center for Archaeological Research, Williamsburg, Virginia. Submitted to Anderson-Hughes, LLC, Newport News, Virginia'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'report'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'07-22/L-WMCAR Reports/ARCeval/19th/20th/James City Co/'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> authors <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> citation_id<span class=\"token punctuation\">,</span> given<span class=\"token punctuation\">,</span> family<span class=\"token punctuation\">,</span> role<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span>\nUUID<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> id <span class=\"token keyword\">FROM</span> citations <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> added <span class=\"token keyword\">desc</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Elizabeth '</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Andre'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'author'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>There's still a lot of cleaning up to do (normalizing the authors table, exploding the subjects, generating the tags), but it did give me pause to remember how beautifully maddening XSLT can be.</p>\n<p>I'll post some screenshots when this gets a bit further along, but I thought this may save someone some time at some point.</p>\n",
			"date_published": "2008-11-19T18:03:24Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-11-06-open-search/",
			"url": "https://waynegraham.github.io/posts/2008-11-06-open-search/",
			"title": "Open Search",
			"content_html": "<p>It's been a while since I last posted, but the NEH Slave Quarters project is coming to a close and the next grant is out the door (to build a digital archive of the newspaper articles of Elizabeth Stoddard).</p>\n<p>So I showed my student worker the search plugins I had made a few years ago and he got really excited. They're burried on our website right now (but then again, so is everything), but he like the convienence. He actually got me to start thinking about it a bit more. IE 7 and Firefox both use OpenSearch now for their search plugins. There's not a whole lot to this description (and it's a lot more convienent than the Sherlock format). What if I built a quick app that could generate the XML for these and them people could install them? We could quickly develop a collection of useful plugins that would help folks get to data (hopefully) faster.</p>\n<p>I started looking at it yesterday and it's pretty straight forward...with a few exceptions. Most search engines use a get method, but I'm finding a bunch of our most popular search engine providers (e.g. lexisnexis, factiva, etc.) use a post method with weird session variables.</p>\n<p>Focusing on just the &quot;easy&quot; stuff first, I wrote a database table (which is still in flux) that recorded the basic OpenSearch fields first: short_name, description, input_encoding, and url. I populated the fields with some basic search engines that folks use here at William and Mary: all the libraries, Google Scholar, Ebrary, JStor, EbscoHost, ScienceDirect, and our federated searching engine). I wrote a search proxy to rewrite the search URLs, though it's really not necessary (and I may change that).</p>\n<p>Since I got on the kick, I figured I'd write something up real quick for Vufind too. By adding a few lines of code, folks will be able to add the Vufind instance to their search list without doing much!</p>\n<p>After I get the code a bit cleaner, and work through some of the other &quot;issues&quot; with search providers who use 'POST' for queries, I'll add some code.</p>\n",
			"date_published": "2008-11-06T14:32:45Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-10-01-nfs-geek-out/",
			"url": "https://waynegraham.github.io/posts/2008-10-01-nfs-geek-out/",
			"title": "NFS Geek Out",
			"content_html": "<p>And that's not Need for Speed :)</p>\n<p>A while back I got a couple of Sun Thumpers (24TB each) to help out with our storage needs in the library. I've gotten to the point to deploy them. I have to admit I really dig the Solaris admin tools (web based ILOM) and the ZFS configuration tools.</p>\n<p>The idea for the first Thumper is to make that the primary storage for of content for our institutional repository (we're running DSpace). The last couple of days I've been getting down to a really geeky level in systems administration. I created an NFS share, but the question was on how to mount it. We use nfs3 in the integrated graphics labs to mount the high performance computing clusters, so I did this for DSpace and added an fstab entry</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>server<span class=\"token operator\">></span>:/dspace /dspace_nfs nfs rw,nosuid,hard,intr,rsize<span class=\"token operator\">=</span><span class=\"token number\">32768</span>,wsize<span class=\"token operator\">=</span><span class=\"token number\">32768</span>,tcp <span class=\"token number\">0</span> <span class=\"token number\">0</span></code></pre>\n<p>I then ran some test to see what kind of throughput I could get.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">$ <span class=\"token function\">time</span> <span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/dev/zero <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span>/dspace_nfs/dspace/testfile <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span><span class=\"token number\">16</span> <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">16384</span></code></pre>\n<p>I got a result of</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token number\">262144</span> bytes <span class=\"token punctuation\">(</span><span class=\"token number\">262</span> kB<span class=\"token punctuation\">)</span> copied, <span class=\"token number\">0.088866</span> seconds, <span class=\"token number\">2.9</span> MB/s</code></pre>\n<p>Then, just to compare it against normal disk I/O, I did the same on the local hard drive</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">time</span> <span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>dev/zero <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=~</span>/testfile <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span><span class=\"token number\">16</span> <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">16384</span></code></pre>\n<p>This was quite a bit faster (as you probably would guess)</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token number\">262144</span> bytes <span class=\"token punctuation\">(</span><span class=\"token number\">262</span> kB<span class=\"token punctuation\">)</span> copied, <span class=\"token number\">0.041865</span> seconds, <span class=\"token number\">6.3</span> MB/s</code></pre>\n<p>To test the read speed, I took the same file and brought it back.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">time</span> <span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/dspace_nfs/dspace/testfile <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span>/dev/null <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span><span class=\"token number\">16</span></code></pre>\n<p>On the NFS mount I got</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token number\">262144</span> bytes <span class=\"token punctuation\">(</span><span class=\"token number\">262</span> kB<span class=\"token punctuation\">)</span> copied, <span class=\"token number\">0.017822</span> seconds, <span class=\"token number\">14.7</span> MB/s</code></pre>\n<p>and on the local file system I got</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token number\">262144</span> bytes <span class=\"token punctuation\">(</span><span class=\"token number\">262</span> kB<span class=\"token punctuation\">)</span> copied, <span class=\"token number\">0.015867</span> seconds, <span class=\"token number\">16.5</span> MB/s</code></pre>\n<p>I was kind of surprised at how close the reads were. It's not a huge file it's moving (our larger files are around 350MB), but it's reasonably consistence with an arbitrary file size of the PDFs we have in the collection.</p>\n<p>I was corresponding with a colleague who's been doing this way longer than I have and he suggested using a larger blocksize and writing/reading some files larger than the RAM size. I also wanted to test against NFS4 (I was using NFS3 in the fstab entry).</p>\n<p>To do this, I just created a mount point and mounted the filesystem.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> /mnt/nfs4\n<span class=\"token function\">mount</span> <span class=\"token parameter variable\">-t</span> nfs4 <span class=\"token operator\">&lt;</span>server<span class=\"token operator\">></span>:/dspace /mnt/nfs4</code></pre>\n<p>I ran the same test on the new mount and got a result of</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token number\">262144</span> bytes <span class=\"token punctuation\">(</span><span class=\"token number\">262</span> kB<span class=\"token punctuation\">)</span> copied, <span class=\"token number\">0.055023</span> seconds, <span class=\"token number\">4.8</span> MB/s</code></pre>\n<p>and for the read</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token number\">262144</span> bytes <span class=\"token punctuation\">(</span><span class=\"token number\">262</span> kB<span class=\"token punctuation\">)</span> copied, <span class=\"token number\">0.014205</span> seconds, <span class=\"token number\">18.5</span> MB/s</code></pre>\n<p>So, it looks like NFSv4 is much improved over NFSv3!</p>\n",
			"date_published": "2008-10-01T20:23:34Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-09-26-down-with-reuters/",
			"url": "https://waynegraham.github.io/posts/2008-09-26-down-with-reuters/",
			"title": "Down with Reuters!",
			"content_html": "<p>A couple of years I went to up the Center for History and New Media with a few folks here at William and Mary and talked with Roy Rosensweig about this cool new thing they were working on for Firefox. He told us the story of how they were searching for a name for this, and someone suggested they use Albanian. After looking up some words in the dictionary, they settled on Zotero.</p>\n<p>To me, it is one of the most import and useful tools any scholar can posses. My one gripe with it was that if you were working on something on a computer at say, work, and then went home to do more work, there wasn't a great way to syncrhonize everything. I resourced to <a href=\"http://portableapps.com/apps/internet/firefox_portable\">portable Firefox</a> on a USB stick which worked reasonably well. Now, with the <a href=\"http://www.zotero.org/documentation/sync_preview\">1.5 Synch preview</a>, I don't need that any more. I can even synch it up to my server (I set up my own WebDAV and store my docs on that system).</p>\n<p>Needless to say, I'm a huge fan. It's not quite FOSS (which would just top this off), but it's pretty close. Shoot, I even recently got a questionnaire about Zotero use for an article from a Law student.</p>\n<p>Anyway, the point of all of this rambling is to set up my absolute disgust when I read Reuters (makers of End Note) are <a href=\"http://www.courthousenews.com/2008/09/17/Reuters_Says_George_Mason_University_Is_Handing_Out_Its_Proprietary_Software.htm\">suing George Mason for Zotero</a> for $10,000,000. It seems Zotero's ability to convert its proprietary &quot;ens&quot; format into Zotero violates its copyright.</p>\n<p>Hopefully they won't sue the Vufind project for allowing people to download references into End Note. Shoot, at this point, I'm ready to make it not a feature on principal...</p>\n",
			"date_published": "2008-09-26T18:04:35Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-09-15-enough-is-enough/",
			"url": "https://waynegraham.github.io/posts/2008-09-15-enough-is-enough/",
			"title": "Enough is Enough!",
			"content_html": "<p>Growing up, I didn't watch football. When I got to college, it was one of the few pleasures I had on Sundays while stuck on post at VMI. At that point, I picked the Detroit Lions as the team to pull for. Bobby Ross was the head coach (a VMI alum), Barry Sanders was still playing, and they were actually showing games on, and Matt Millen had yet to make his mark on the team. However, it's become more and more difficult to actually keep rooting for them.</p>\n<p>Living in Virginia, it's been difficult to catch games...though I see highlights of other teams running all over them all the time. With yesterday's absolute shellacking by the Packers, I've come to the point that I am renoucing the Lions as &quot;my team.&quot;</p>\n<p>For the rest of the season, I will just be a fan of football as I evaluate other teams to pick a new team to root for. Since this decision is a long-time coming, I have two preliminary front-runners, though this is all subject to change, based on my whims :) ...</p>\n<p>Washington Redskins: They're geographically close, so I can watch all their games. Another plus is that a close friend of mine has a bunch of season tickets. They've got a pretty talented offense, though the head coach I think may need a year or two to get good at the job.</p>\n<p>Pittsburgh Steelers: Mike Tomlin is a William and Mary alum and was a coach at VMI when I was there. He's from Newport News and is always giving talks to kids down there. They're one of the most storied franchises, though the mess with the NFL's meddling to keep the Rooney's in an ownership role disturbs me a bit.</p>\n<p>I think some of my criteria for choosing a new team will revolve around the stability in the head office, the current coach's and players, geographic location, and future projects, along with past treatment of players. This may also expand, but as of right now, I'm in the market for a team.</p>\n",
			"date_published": "2008-09-15T13:35:47Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-09-12-cakephp-authentication/",
			"url": "https://waynegraham.github.io/posts/2008-09-12-cakephp-authentication/",
			"title": "CakePHP Authentication",
			"content_html": "<p>I found some great tutorials on implementing ACL authentication in CakePHP. However, for the longest time I couldn't get the actual example code to work. The way to authenticate everything in your application is to create an app_controller.php file in your app folder (see <a href=\"http://book.cakephp.org/view/643/Preparing-to-Add-Auth\">Preparing to Add Auth</a>). In every other controller I've created in CakePHP, you follow this convention:</p>\n<pre class=\"language-php\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">FooBarsController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AppController</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'FooBars'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token delimiter important\">?></span></span></code></pre>\n<p>I followed the same convention (didn't read the docs very closely) and just got all kinds of errors. After digging a bit deeper, turns out AppController extends Controller...apparently it can't extend itself :)</p>\n<p>Hopefully this'll save some time for someone, but the full controller for the example in the cookbook for the app_controller.php is this:</p>\n<pre class=\"language-php\" tabindex=\"0\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">AppController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Controller</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> <span class=\"token variable\">$components</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Auth'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'Acl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">beforeFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//Configure AuthComponent</span>\n    <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">Auth</span><span class=\"token operator\">-></span><span class=\"token property\">authorize</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'actions'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">Auth</span><span class=\"token operator\">-></span><span class=\"token property\">loginAction</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'controller'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'users'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'action'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">Auth</span><span class=\"token operator\">-></span><span class=\"token property\">logoutRedirect</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'controller'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'users'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'action'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">Auth</span><span class=\"token operator\">-></span><span class=\"token property\">loginRedirect</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'controller'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'posts'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'action'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'add'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?></span></span></code></pre>\n",
			"date_published": "2008-09-12T16:47:18Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-09-11-virtualbox-20/",
			"url": "https://waynegraham.github.io/posts/2008-09-11-virtualbox-20/",
			"title": "Virtualbox 2.0",
			"content_html": "<p>I saw this morning that Sun released VirtualBox 2.0 (it was released last Thursday, but had missed that). The big update (at least to me) is that it now supports 64-bit guests (on 64-bit hosts). I added the <a href=\"http://www.virtualbox.org/wiki/Linux_Downloads\">deb packages for my Ubuntu</a> box and installed the virtualbox-2.0. The package installed properly, but the icon I had been using to launch the program went away and launching from the terminal also disappered.</p>\n<p>The fix was pretty quick, but took a couple of minutes to locate. On top of installing the new package, you also need to run the vboxdrv setup to recompile the kernel module.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> /etc/init.d/vboxdrv setup</code></pre>\n<p>After you run this, everything runs wonderfly again :)</p>\n",
			"date_published": "2008-09-11T10:18:41Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-09-05-vufind-and-sirsi/",
			"url": "https://waynegraham.github.io/posts/2008-09-05-vufind-and-sirsi/",
			"title": "Vufind and Sirsi",
			"content_html": "<p>I committed a bunch of small fixes into the <a href=\"http://code.google.com/p/solrmarc\">Solrmarc</a> and <a href=\"http://www.vufind.org\">Vufind</a> projects today to deal with the release of Solr 1.3 RC 2. We're using the multicore functionality of Solr for Vufind and we were having some issues with the resource loaders for the different cores. The fix was pretty minor, just creating a <a href=\"http://lucene.apache.org/solr/api/org/apache/solr/core/CoreContainer.html\">CoreContainer</a> and set the SolrCore from that:</p>\n<pre class=\"language-java\" tabindex=\"0\"><code class=\"language-java\"><span class=\"token class-name\">CoreContainer</span> cc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CoreContainer</span><span class=\"token punctuation\">(</span>solrCoreDir<span class=\"token punctuation\">,</span> configFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsolrCore <span class=\"token operator\">=</span> cc<span class=\"token punctuation\">.</span><span class=\"token function\">getCore</span><span class=\"token punctuation\">(</span>solrCorename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Ok, so that was more of an update, but it got me to reindex the our marc content. Our 001 fields don't always have info, so our Systems Librarian told me just to use the 035a for the id field. There was only one problem...they had a &quot;(Sirsi)&quot; as a prefix to the actual number. This wouldn't be that big of an issue, but it was causing the queries sent to Solr to be off, and I wasn't getting any results for a detail view.</p>\n<p>Fortunately, Solrmarc already has a facility to deal with this: PatternMaps! To pull out just the number, I changed the id definition in the vufind.properties file to</p>\n<pre class=\"language-java\" tabindex=\"0\"><code class=\"language-java\">id <span class=\"token operator\">=</span> <span class=\"token number\">035</span>a<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>pattern_map<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> first</code></pre>\n<p>This basically maps the id field in the schema.xml file to the 035a, using a patternMap named pattern_map.id, and only takes the first of the 035a if there are multiples. I know, there shouldn't be, but I've seen funky things :)</p>\n<p>Now, to add the PatternMap definition:</p>\n<pre class=\"language-java\" tabindex=\"0\"><code class=\"language-java\">pattern_map<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span>pattern_0 <span class=\"token operator\">=</span> \\\\<span class=\"token punctuation\">(</span><span class=\"token class-name\">Sirsi</span>\\\\<span class=\"token punctuation\">)</span>\\\\ <span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token operator\">></span>$<span class=\"token number\">1</span><span class=\"token punctuation\">[</span><span class=\"token operator\">/</span>code<span class=\"token punctuation\">]</span>\n\n<span class=\"token class-name\">It</span>'s just a simple regex pattern definition that takes out the <span class=\"token string\">\"(Sirsi)\"</span> and the space between it and the actual id we're using<span class=\"token punctuation\">.</span></code></pre>\n",
			"date_published": "2008-09-05T18:08:25Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-09-03-choosing-a-php-framework/",
			"url": "https://waynegraham.github.io/posts/2008-09-03-choosing-a-php-framework/",
			"title": "Choosing a PHP Framework",
			"content_html": "<p>I'm working on an NEH funded collaborative research grant entitled &quot;Measuring the Social, Spatial, and Temporal Dimensions of Virginia Slave Housing.&quot; The project is exciting because it's taking existing architectural, archaeological, and documentary evidence to create a standard presentation for the information. A perhaps more important, though secondary (or I dare say tertiary) part is a standardized form for recording the information in the field. Right now most of this information is in varying levels of completeness, based mostly on the researcher and the sponsoring institution's goals.</p>\n<p>So, through the process of generating the database schema, we developed about 25 relational tables that record varying degrees of information. The basic idea is that there is a meta-object (a site) that contains one-or-more buildings. Each of these buildings can have a one-or-more phases (adding editions) and then each phase has additional information on a room-by-room basis (doors, windows, fire places, etc.).</p>\n<p>I had built a similar database for a project looking at Chesapeake architecture for the Jamestown 400th anniversary celebrations (<a href=\"http://www.historycooperative.org/journals/wm/64.3/graham.html\">Adaptation and Innovation: Archaeological and Architectural Perspectives on the Seventeenth-Century Chesapeake</a>) in ColdFusion using <a href=\"http://trac.reactorframework.com/\">Reactor</a> with an MSSQL backend. However, this project requied slightly different specs as it is being hosted in a different location that doesn't offer ColdFusion hosting. They have the basic *AMP stack, so I started looking around at the different PHP frameworks to aid in the development of the application.</p>\n<p>After a little investigation, I narrowed down the choices to what I'm calling the Big-Three: <a href=\"http://framework.zend.com/en/\">Zend</a>, <a href=\"http://codeigniter.com/\">CodeIgniter</a>, and <a href=\"http://cakephp.org/\">CakePHP</a> (yes, I know there are more). While looking at these, I needed something that I can pick up quickly, let's me quickly build the different forms needed to populate the information, have a sizable community to help solve issues that pop up, and also be flexible enough to quickly change the database backend when needed (and when working with academics, this happens more than you really want it to).</p>\n<p>Zend has some great features. It's backed by a company (Zend) who provides training. They have support and training courses, but this is a for-profit company, so the cost is a bit prohibitive for a small research project (with very little funding). Their site does provide good documentation, video examples, and a really cool integration with Lucene (<a href=\"http://framework.zend.com/manual/en/zend.search.lucene.html\">Zend_Search_Lucene</a>). I thought the <a href=\"http://framework.zend.com/docs/quickstart\">QuickStart</a> was a bit on the light side, but thought it had a really rich feature set (at least for what I need it to do).</p>\n<p>Next up was <a href=\"http://codeigniter.com/\">CodeIgniter</a>. I was a bit dazzled by this. I liked it small footprint and it seemed lighter and didn't have strict naming conventions. It also had scaffolding! This is quite important in the development process as the database backend will change through the course of the site development. I know, it's not a good idea to put this into a production environment, but we're talking about maybe two other people working on this at one time. The video tutorials are pretty nice, and there seemed to be a good group of folks adding content all the time. There are some nice authentication libraries (FreakAuth) and it's pretty easy to get something up on the screen.</p>\n<p>I had played (briefly) with <a href=\"http://cakephp.org/\">cakePHP</a> over the summer. I was intriged with &quot;baking&quot; the application (the metaphore gets a bit overplayed). Essentially they developed a script that will take the scaffolding and then generate the basic models, views, and controllers for the application. It even goes a step further with login permissions (though there's a bit of manual updating there). I didn't really dig how they really push the naming conventions, but I quickly figured out how to over ride most of them.</p>\n<p>In the end, I've decided to go with cakePHP for this application. I really liked the fact that I could get away with writing very little code and generate most of what I'll need to get the administrative backend up-and-running. I may be disappointed in this decision, but as I make progress on the project, I'll add more posts on some of the pit-falls and successes.</p>\n",
			"date_published": "2008-09-03T11:39:22Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-08-21-luke-for-lucene-24/",
			"url": "https://waynegraham.github.io/posts/2008-08-21-luke-for-lucene-24/",
			"title": "Luke for Lucene 2.4",
			"content_html": "<p>On the Vufind project, I've been migrating the Solrmarc codebase to use Solr 1.3. It's got a lot of nifty changes (the multi-core and DataImportHandler are really nice additions), including moving to Lucene 2.4 for the actual indexing.</p>\n<p>On the down side, this means that <a href=\"http://www.getopt.org/luke/\">Luke </a>doesn't have the correct analyzers or format interpretors (you get an incorrect format excpetion).</p>\n<p>The fix is pretty quick. Just download the source tarball/zip for Luke (at the bottom of the page) and extract them somewhere. Then, grab a build of the Lucene 2.4 core, analyzers, and snowball analyzer (I grabbed mine from the <a href=\"http://people.apache.org/builds/lucene/solr/nightly/\">Solr nightly build</a>).</p>\n<p>Just throw the jars into Luke's lib folder (e.g. ~/luke-src-0.8-dev/lib) and then rebuild with Ant (ant). This will build the jars in the dist folder. You should be able to check out your index to make sure everything is good in the index.</p>\n<p>If you're lazy and just want the one I created, here you go: <a href=\"http://www.liquidfoot.com/wp-content/uploads/2008/08/luke-08-dev.jar\">luke-08-dev</a></p>\n",
			"date_published": "2008-08-21T16:13:37Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-08-05-open-source-facebook-application/",
			"url": "https://waynegraham.github.io/posts/2008-08-05-open-source-facebook-application/",
			"title": "Open Source Facebook Application",
			"content_html": "<p>Over the last year our library has used its Facebook application to let students see where their friends are in the library and expose library resources to users without needing to go to another website. It's been used pretty heavily and there are a lot of folks in the library world who have asked to get the source.</p>\n<p>This summer Phil spent a couple of weeks rewriting the code to be a little easier to maintain. We reimplemented the code with <a href=\"http://www.smarty.net/\">Smarty</a> and reimplemented the locational device to use FBJS instead of regenerating an image when someone clicked on the map (it's much faster now).</p>\n<p>If you need a starter app, check it out at <a href=\"http://code.google.com/p/facebook-athenaeum\">http://code.google.com/p/facebook-athenaeum</a>/.</p>\n<p>If you need a good book on writing Facebook Applications, check out my book, <a href=\"http://apress.com/book/view/1430209690\">Facebook API Developers Guide</a>.</p>\n",
			"date_published": "2008-08-05T13:50:46Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-07-21-virtual-box/",
			"url": "https://waynegraham.github.io/posts/2008-07-21-virtual-box/",
			"title": "Virtual Box",
			"content_html": "<p>On several of the projects I work on, it's very handy to have multiple operating systems installed to test out my code. For a while I've been using VMWare. It's been working pretty nicely and I didn't have many complaints. I did experience some headaches when I upgraded to Ubuntu 8.04 because of the kernel packages, but after a couple of bug fixes, recompiling, and reconfiguring, everything was happy.</p>\n<p>I've got a Mac Pro on the desk next to me that we've been running Parallels on to run some of our Windows-only software (e.g. the client for our library catalog). Phil saw that there was support for Windows on OS X 10.5, so we threw Virtual Box on it to try it out. Here are my observations thus far running the software on Ubuntu and Leopard:</p>\n<ol>\n\t<li>Virtual Box seems to be a bit faster. I have no tests to back this up, it just <em>seems</em> faster.</li>\n\t<li>The VDIs are nice (here's a <a href=\"http://veedee-eyes.com/veedeeeyes/vdi/index\">longer list</a> of VDIs)</li>\n\t<li>Permissions for the kernel driver can cause a small headache (be sure to add your user account to the vboxusers group).</li>\n\t<li>Virtual Box doesn't require me to go get keys when I rebuild a computer and forget to write down the key :)</li>\n</ol>\nSo far, I really am liking Virtual Box...\n",
			"date_published": "2008-07-21T10:22:19Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-07-18-sourceforge-goodness/",
			"url": "https://waynegraham.github.io/posts/2008-07-18-sourceforge-goodness/",
			"title": "Sourceforge Goodness",
			"content_html": "<p>Yesterday Sourceforge was doing some work on their SVN projects. We've been using them for the Vufind project. I was attempting to finish putting in a snapshot of the solrmarc code to use that codebase for indexing marc. I put in the stuff out of the Google repository, but hadn't realized that Andrew had modified the solrmarc code in the Vufind project and we were missing a couple of functions. I was going to modify the code by just going into the SVN browse on Sourceforge, but it's still a bit on the flaky side. Right now the solrmarc code isn't a little out of synch with the Vufind code, but I should hopefully get that fixed up this weekend.</p>\n<p>I did add a bunch of code to the solrmarc project today for logging using log4j. I have to say it's pretty nice to actually have spent the time to actually get most of this implemented since logging had been on my list of //TODO.</p>\n",
			"date_published": "2008-07-18T22:12:49Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-07-18-facebook-app/",
			"url": "https://waynegraham.github.io/posts/2008-07-18-facebook-app/",
			"title": "Facebook App",
			"content_html": "<p>Phil and I (mostly Phil) have been working on getting the code for our Facebook application ready to be released on Google Code. Phil has done a phenomenal job in getting the code ported to FBML so we don’t have to use the lib_gd stuff any more to generate images. We also rewrote it using Smarty templates. As a brief aside, I’m not sure why I haven’t been using this for a while. It really is a great framework for the majority of what I need to do.</p>\n<p>If you’re interested, you can check out the code at <a title=\"Facebook Athenaeum\" href=\"http://code.google.com/p/facebook-athenaeum\">http://code.google.com/p/facebook-athenaeum</a>. There are a few more features to add in, but it does work rather nicely, and a lot faster than our previous version. The slowest thing is the asynchronous post to the MySQL server (the longest time we recorded was 111ms), but since that happens in the background, you don’t even notice.</p>\n",
			"date_published": "2008-07-18T09:43:32Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-07-17-starting-over/",
			"url": "https://waynegraham.github.io/posts/2008-07-17-starting-over/",
			"title": "Starting Over",
			"content_html": "<p>I saw this on SmashingMagazine this morning and just had to have it! I haven't been posting to this blog much and figured this would be as good a time as any to pick things back up.  While I was in there I upgraded from WP 2.4 to 2.6. Wow. Talk about a great improvement on the backend!</p>\n<p>I learned a couple of interesting facts over the last couple of days. First, working on the <a href=\"http://www.vufind.org\">Vufind</a> code (well, actually it was <a title=\"SolrMarc\" href=\"http://code.google.com/p/facebook-athenaeumhttp://code.google.com/p/solrmarc\">solrmarc</a>), Andrew and I were discussing the looping of subfields in marc records. It seemed to us that any field should only have a single subfield. So, say a 650 should only have one subfield a, b, c, etc. Much to our shagrin, we found out that specific fields can have repeating subfields. It never ceases to amaze me that what all is packed into this specification.</p>\n<p>Also, the Dspace upgrade didn't go so well...in fact parts of the upgrade went well, but there's a big error I'm getting when we attempt to create the new indexes. No matter what, it errors out with a null pointer exception. I'm building a new machine to get this reconfigured. I'm just glad there aren't that many folks using that server right now!</p>\n",
			"date_published": "2008-07-17T08:52:58Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-06-13-rotten-luck/",
			"url": "https://waynegraham.github.io/posts/2008-06-13-rotten-luck/",
			"title": "Rotten Luck",
			"content_html": "<p>I'm currently at a conference at Lehigh University, and it's given me pause to really reconsider air travel. Every time I travel, seems something goes awry. Coming back from a conference in California about a month ago, the last leg of my flight was canceled because the plane needed a new tire, and all of Charlotte didn't have a tire for that particular aircraft. I could swallow that since the aircraft wasn't safe to fly, but the line to actually reschedule my flight took about 2 hours, and they couldn't get me back to Newport News (where my car was) until almost midnight the next day. Fortunately, my wife came to get me in Norfolk. I was significantly peeved to not choose US Airways for my next flight to Vegas that I was going on in the next couple of weeks.</p>\n<p>Coming back from Las Vegas (on United), the company had issued some &quot;cost saving measures&quot; that meant that the pilots couldn't have the engines on before we boarded on the flight from Dulles to Richmond. It was hot that day, so they turned the fans on for us, which drained the auxiliary power, which meant the engines couldn't be started. Well, they brought some field units on, but after the first three didn't work, we disembarked the aircraft to wait for maintenance to bring a fourth unit from another unit to get the aircraft started.</p>\n<p>In my latest trip (unfortunately back on US Airways), I got to Lehigh yesterday afternoon, but my bags only made it as far as Boston. I was first told my bags would be on the 4:00pm flight, but when I called at 6:30 to check, they told me they'd be arriving at 7:00pm. I called at 9:00 to check, and they told me my bag would be delivered by midnight last night. Since I wasn't woken up by my phone last night, I called again this morning. I was informed that the delivery service began at 8:00am, and they had a 4 - 6 hour window for delivery.</p>\n<p>I'm thinking that the next time I need to travel, Amtrak is looking a lot better...</p>\n",
			"date_published": "2008-06-13T10:23:15Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-05-21-thumpers/",
			"url": "https://waynegraham.github.io/posts/2008-05-21-thumpers/",
			"title": "Thumpers",
			"content_html": "<p>Just received two of Sun's 24TB Sun Fire x4500 Thumper boxes! The plan (at least right now) is to run SMB and NFS shares so the folks in our media studios can actually put their info on something a bit more stable than the local macs. We have a triple-speed network switch between the Macs and our server room (though they I haven't seen any computers here that can actually handle data that fast), but it should be pretty zippy. We'll also be able to consolidate the storage (hopefully) of our institutional repository and staff file storage.</p>\n<p>We're also getting a 10Gig switch put in this December so we can surf Internet2 at super speed (or at least the folks working in the Integrated Graphics Lab will be able to send their jobs to the super computers faster)!</p>\n<img title=\"Sun x4500\" src=\"http://www.sun.com/images/k3/k3_sunfirex4500_1.jpg\" alt=\"\" width=\"520\" height=\"309\">\n",
			"date_published": "2008-05-21T14:37:21Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-04-17-bit-torrents/",
			"url": "https://waynegraham.github.io/posts/2008-04-17-bit-torrents/",
			"title": "Bit Torrents",
			"content_html": "<p>I've been offline for a while (and there are a flurry of posts about that coming up), but I had a very strange thing happen yesterday. Earlier this year, I published the <a href=\"http://apress.com/book/view/1430209690\">Facebook API Developer's Guide</a>. It seems to be selling reasonably well on Amazon...even broke the top 100 computer books for a couple of days.</p>\n<p>Being it's a book on Facebook, I've had a few folks add me as a friend and shoot me messages and ask some questions. It all seemed pretty cool, until yesterday. I got a note from a person in Tunisia who added me as a friend and asked a question. I sent a response thanking him for purchasing my book, and this is where I was a little taken aback. In fact, this was his exact response:</p>\n<p>well, to be honest with you i got your book from a torrent site, i would have bought it if i wasnt living in Tunisia, I hope this won't affect anything :)</p>\n<p>I didn't quite know what to say. He was nice enough to send the link to the torrent site, and apparently there are 41 seeders and 3 leechers.</p>\n<p>At first, I was thinking of trying to get the site to remove the link, but I've been around long enough to know that doesn't really stop anything. I have say that I'm still scratching my head on this one. I'm not sure if I'm flattered that there are people that think its worth stealing, offended that someone would under the pretense of purchasing my intellectual property ask a question (could have just asked, I'm a pretty nice guy), or mad that he stiffed me a 20% commission on a book.</p>\n<p>Still trying to figure this one out...</p>\n",
			"date_published": "2008-04-17T20:14:17Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-04-17-computer-graphics/",
			"url": "https://waynegraham.github.io/posts/2008-04-17-computer-graphics/",
			"title": "Computer Graphics",
			"content_html": "<p>As I mentioned in my last post, I've been silent for a while. I've had a major project in deploying some institutional repository software (<a href=\"http://www.dspace.org/\">DSpace</a>) to collect the <a href=\"http://dspace.swem.wm.edu/\">research that students here at William and Mary</a> are doing in a systematic way. Generally this is deployed with more than one person...but you do what you need to do to finish a project ;)</p>\n<p>The other major time consuming project has been my idea that taking computer graphics would be fun. Just a short footnote about me, I'm a former historian who got into computers during graduate school. Anyway, the College hired John Van Rosendale, who among other things, funded NVidia to develop those wonderful drivers for Linux when he was at the NSF. I was pretty geeked about the class, and talked with John before the semester started. He said that while I didn't have the math background (his idea of &quot;basic math&quot; is advanced calculus and linear algebra) or the programming background (he wanted us to use C/C++), that I would just have to learn that stuff.</p>\n<p>Our first programming assignment (after about a month of linear algebra and vector math review) was to create a wireframe barn in OpenGL. This was the first time I had worked with C/C++ (most of my &quot;real&quot; programming has been in Java), so developing the Vector and Matrix classes to do all the perspective transformations took a little longer than I had expected. After that, generating views using OpenGL line primitives was a snap.</p>\n<p>All was good until I got to the second part of the assignment...a non-recursive ray tracer that implemented Gouraud and Phong lighting models on a pyramid. After several weeks of messing with the code and getting no where, I wanted to drop the course. John wouldn't let me, and got me through line-triangle intersections using barycentric coordinates. It didn't look like much at the time, really just a square, but it was a great (though very frustrating) introduction to ray-object intersections, coordinate systems, barycentric coordinate calculations, and lighting models.</p>\n<p>Immediately after this, our first project was to implement from scratch, a recursive ray tracer that handled reflection, refraction, specular hightlights, and shading for a scene of spheres on a checkerboard floor. I got the specular highlights and shadows pretty quickly, but had a hard time with refraction (well, I guess I also had a problem with RGB because I was going from 0 to 255 instead of 0 to 1, but that was just a bug).</p>\n<p>When all was said and done, I learned a lot in this course and realized how brilliant folks like Ed Catmull (Pixar) are when they were inventing this stuff back in the 1970s!</p>\n<p>Anyway, here are a couple of samples of the images I produced using my ray tracing engine. Each has has reflective and refractive surfaces with a maximum recursion depth of 5 with a cylinder texture-mapped with a sky image. Each image took just over a minute to render on a dual quad-core Xeon @ 3.2 GHz.</p>\n<img class=\"alignnone size-thumbnail wp-image-165\" title=\"scene1\" src=\"http://www.liquidfoot.com/wp-content/uploads/2009/01/scene1-150x150.png\" alt=\"scene1\" width=\"150\" height=\"150\">\n<img class=\"alignnone size-thumbnail wp-image-166\" title=\"scene2\" src=\"http://www.liquidfoot.com/wp-content/uploads/2009/01/scene2-150x150.png\" alt=\"scene2\" width=\"150\" height=\"150\">\n",
			"date_published": "2008-04-17T12:27:13Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2008-03-18-facebook-developer-api/",
			"url": "https://waynegraham.github.io/posts/2008-03-18-facebook-developer-api/",
			"title": "Facebook Developer API",
			"content_html": "<p>It's been a long while since I posted anything here. Things have been a bit hectic with the launching of a new institutional repository service (using DSpace), taking a computer graphics course (linear algebra, ray tracing, scientific visualization, etc.), and finishing up my book on the <a href=\"http://www.facebook.com/pages/Facebook-API-Developers-Guide/8672611380\">Facebook API</a>.</p>\n<p><a href=\"http://www.amazon.com/gp/product/1430209690/\"> <img style=\"border: 0pt none;\" src=\"http://ecx.images-amazon.com/images/I/41YiSZ1UfJL._BO2,204,203,200_PIsitb-sticker-arrow-click,TopRight,35,-76_AA240_SH20_OU01_.jpg\" border=\"0\" alt=\"\" align=\"left\"></a></p>\n<p>This is the first book I've written and I have to admit it was far more of a task than I had first thought it would be. Not that the subject matter was very dense, but there were at least four major changes in the API that required an almost total rewrite of the code base for the examples. There were even a couple of sections that had to get cut because Facebook &quot;fixed&quot; their code because of security and user concerns (plus a lot of folks &quot;abuse&quot; some of the things you could do with the API).</p>\n<p>There are some great Coldfusion resources for building Facebook applications in ColdFusion. The &quot;un-official&quot; ColdFusion client library for Facebook apps is at <a href=\"http://www.nearpersonal.com/code/\">nearpersonal</a>. There is also a RIAForge starter project for FBML (FBML is a tag based language for Facebook) named <a href=\"http://fbmlstarter.riaforge.org/\">Facebook FBML Starter Kit</a>.</p>\n<p>So, if you're wanting a short book that highlights some of the more common elements of developing Facebook applications, be sure to check out my book!</p>\n",
			"date_published": "2008-03-18T12:59:32Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2007-10-31-solcoldfusion-update/",
			"url": "https://waynegraham.github.io/posts/2007-10-31-solcoldfusion-update/",
			"title": "SolColdfusion Update",
			"content_html": "<p>I've been knocked out by a really bad cold the last couple of weeks and I'm just starting to get things back to normal. I did want to send a quick post on the status of the SolColdfusion project. After seeing Ray's Seeker project, it reminded me that I hadn't set up a project at RIAForge yet, so I took care of that last night. You can now access the official project at <a href=\"http://solcoldfusion.riaforge.org/\">http://solcoldfusion.riaforge.org/</a>.</p>\n<p>Since the project site is up-and-running, I also submitted it to the Solr project <a href=\"http://issues.apache.org/jira/browse/SOLR-404\">SOLR-404</a> (I know it's a coincidence that it's number 404, but it makes me wonder if it's some type of bad omen ;) ...). Anyway, if you think the client should get included in the project, be sure to vote for it!</p>\n<p>I've also been working on a generic interface, much like Erik Hatcher's <a href=\"http://wiki.apache.org/solr/Flare\">Solr Flare</a>. It's been a bit slow coming as I've not had a lot of time to work on these projects, but hopefully things will settle down shortly so I can devote a bit more time to them.</p>\n",
			"date_published": "2007-10-31T17:01:19Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2007-10-05-solr-schema/",
			"url": "https://waynegraham.github.io/posts/2007-10-05-solr-schema/",
			"title": "Solr Schema",
			"content_html": "<p>If you've ever worked on a project that involved Coldfusion's bundled version of Verity, you've no doubt run into the issue of trying to confine your fields into the structure that Verity imposes, and those custom fields are really precious in these instances. About 6 months ago, I ran into an issue with a search project where I had about 125,000 documents to index. Since we also wanted to be able to use the indexes for some other projects, I was a bit nervous to commit almost the entire allotment of indexable objects to one collection. This launched me into writing a custom search engine and indexer using Lucene and slapping Coldfusion around the responses to do things that Verity did. However, once the projects were complete, I never really got around to making it easy to use. It does cool stuff like search across multiple collections, context highlighting, relevancy calculations, term vector calculations, &quot;did you mean&quot;, etc. Essentially everything I think all good search engines need to be able to do. Something this system lacked was an easy way to define the fields that you wanted indexed (along with a knowledge of Java to actually make the changes).</p>\n<p>The ability to create any number of fields to index in different ways (along with faceting) is a real strong point of Solr. Not only can you add fields and choose how that data is analyzed, you can create your own field types that process the information in your index the way you want them to be.</p>\n<p>This is done in the <code>$SOLR_HOME/config/schema.xml</code> file. The first section (<types>) defines the types of fields that you will be using, and how Solr should process them with Lucene. If you look at some of the fieldtypes, you'll get an idea of what's possible. For instance, the fieldtype for &quot;string&quot; is an untokenized field that doesn't normalize the fields and sorts missing information last.</types></p>\n<pre class=\"language-xml\" tabindex=\"0\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldtype</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>solr.StrField<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">sortMissingLast</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">omitNorms</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n</code></pre>\n<p>However, if you need a more robust fieldtype, look at the fieldtype for &quot;text&quot;. This uses a whitespace tokenizer (splits words with whitespace) and uses the stopwords defined in the stopwords.txt file. It does some other processing (filters words, converts them to lowercase, runs a porter stemmer, and then removes duplicates). This fieldtype also defines what to do when a query is passed to it (uses the same filters). This is slightly different than the defined &quot;textTight&quot; which does not perform any further analysis on the text when being queried. You'll probably find that most of these work for most instances, but if you need to, you can build your own fieldtype that has very specific indexing and query filters.</p>\n<p>The next section contains the actual fields you want to use in the aptly named &quot;fields&quot; element. This is where you actually define the fields that will be in your index, the type of analysis to perform on the field, if it should be indexed, stored, have term vectors, or be multivalued (have multiple instances of the same field in the index).</p>\n<p>Let's say you're wanting to develop an indexing schema for books (hey, I work in a library). At a very basic level, you'd want a field for an id, title, author, reviews, and a set of topics (or tags). Your fields element would contain something along the lines of:</p>\n<pre class=\"language-xml\" tabindex=\"0\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“id”</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“string”</span> <span class=\"token attr-name\">indexed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”</span> <span class=\"token attr-name\">stored</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”/</span><span class=\"token punctuation\">></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“title”</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“text”</span> <span class=\"token attr-name\">indexed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”</span> <span class=\"token attr-name\">stored</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”</span> <span class=\"token attr-name\">termVectors</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”</span> <span class=\"token punctuation\">/></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“titleStr”</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“string”</span> <span class=\"token attr-name\">indexed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”</span> <span class=\"token attr-name\">stored</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“false”</span> <span class=\"token attr-name\">multiValued</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”/</span><span class=\"token punctuation\">></span></span> \n&lt;field name=“author” type=“text” indexed=“true” stored=“true”termVectors=“true” /> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“authorStr”</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“string”</span> <span class=\"token attr-name\">indexed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”</span> <span class=\"token attr-name\">stored</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“false”</span> <span class=\"token attr-name\">multiValued</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”/</span><span class=\"token punctuation\">></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“review”</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“text”</span> <span class=\"token attr-name\">indexed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”</span> <span class=\"token attr-name\">stored</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”</span> <span class=\"token attr-name\">multiValued</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”/</span><span class=\"token punctuation\">></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“topic”</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“text”</span> <span class=\"token attr-name\">indexed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”</span> <span class=\"token attr-name\">stored</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”</span> <span class=\"token attr-name\">multiValued</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”</span> <span class=\"token attr-name\">termVectors</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”/</span><span class=\"token punctuation\">></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“topicStr”</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“string”</span> <span class=\"token attr-name\">indexed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”</span> <span class=\"token attr-name\">stored</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“false”</span> <span class=\"token attr-name\">multiValued</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“true”/</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>You'll notice that I have a couple of extra fields for title, author, and topic, these are for the faceting info and are just untokenized fields to make the calculations for facets a little more efficient.</p>\n<p>Now, we're almost done with creating the schema. We just need to declare a unique key, default search field, and default search operator.</p>\n<pre class=\"language-xml\" tabindex=\"0\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>uniqueKey</span><span class=\"token punctuation\">></span></span>id<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>uniqueKey</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>defaultSearchField</span><span class=\"token punctuation\">></span></span>title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>defaultSearchField</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>solrQueryParser</span> <span class=\"token attr-name\">defaultOperator</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OR<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre>\n<p>Remember when I made the fields with the &quot;Str&quot; suffix? We can use a really cool feature of Solr called a &quot;copyField&quot; that literally copies the information from one field to another.</p>\n<pre class=\"language-xml\" tabindex=\"0\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>copyField</span> <span class=\"token attr-name\">source</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“author”</span> <span class=\"token attr-name\">dest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“authorStr”/</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>copyField</span> <span class=\"token attr-name\">source</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“title”</span> <span class=\"token attr-name\">dest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“titleStr”/</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>copyField</span> <span class=\"token attr-name\">source</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“topic”</span> <span class=\"token attr-name\">dest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“topicStr”/</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>It's worth mentioning here that Solr indexes are not databases! While there are some similarities in the way that Solr allows you to add, update, select, store, and delete information from the index, Solr isn't an RDBMS. I've seen a few discussions where there is some confusion as to why Solr can't do the equivalent of a stored procedure, or some other function of a database.</p>\n<p>Now, your index server is ready to receive documents to search against. The server, in with the above example as the schema, will expect information to be in the following format:</p>\n<pre class=\"language-xml\" tabindex=\"0\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Solr Rocks!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>author<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Barr, Foo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>review<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>This book rocks!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>review<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>This book is horrible!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>topic<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>information retrieval systems<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>topic<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>xml <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>topic<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>search<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>topic<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>apache foundation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Next week when I get some time, I'll write about creating facet queries...</p>\n",
			"date_published": "2007-10-05T17:27:02Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2007-10-05-solr-and-coldfusion-setting-up/",
			"url": "https://waynegraham.github.io/posts/2007-10-05-solr-and-coldfusion-setting-up/",
			"title": "Solr and Coldfusion -- Setting Up",
			"content_html": "<p>To get up and running with Solr, you'll need some type of Servlet container. Typically when folks start talking about servlet containers, they're talking about <a href=\"http://tomcat.apache.org/\">Tomcat</a> or <a href=\"http://jetty.mortbay.org/\">Jetty</a>. In fact, Solr comes with Jetty 6.1.3 (they haven't upgraded to 6.1.5 yet in the distribution). You may also hear about <a href=\"http://www.caucho.com/\">Resin</a>, but in my experience, it runs a bit slower than Jetty and Tomcat. As a small note, servlet containers are different than J2EE application servers like JRun, Geronimo, GlassFish, and JBoss (which use servlet containers like Tomcat and Jetty, but also have EJB containers and can handle other types of logic). If you have a J2EE application server running, you can easily use Solr, and if not, consider using Jetty or Tomcat as your container server.</p>\n<p>Since your environment can be as varied as there are IT departments, I won't try to cover everything. Essentially you need to have at least the Java 1.5 JRE. However, I would <strong>strongly</strong> suggest the most current <a href=\"http://java.sun.com/\">Java JDK (and not the JRE)</a> as it has performance enhancements to run in server mode (with -server). If you don't already have this Java version installed on your server (assuming this is the same server running CF), don't worry, ColdFusion will still work if you install the required Java runtime.</p>\n<p>Essentially the process for deploying Solr, once you have a servlet container up-and-running is to drop the solr.war file into the webapps directory on the server. It won't do anything at this point as you need to set the configuration files for Solr. The easiest way to do this is copy the files from example/solr into a new directory (which I will refer to now as solr_home).</p>\n<p>You can tell Java about the home directory by setting the solr.solr.home (-Dsolr.sol.home), set the JNDI lookup (&quot;java:comp/env/solr/home&quot;), or just throw it into the JVM's working directory (the default path is ./solr). Now you just need to make sure everything is running. Just point your browser to http://<server>:<port>/solr/admin. You should then see the administration interface (you may need to restart your servlet container to get everything working properly), but it's not an administrative interface like you get in CFAdmin. This is more of an informational administration panel. You can make sure everything is running, that there are documents in your index is set up properly, check out the schema and configuration files, and thread information. Really the only thing you can administer here is the log level.</port></server></p>\n<p>For some more specific notes on intalling Solr in <a href=\"http://wiki.apache.org/solr/SolrTomcat\">Tomcat</a> and <a href=\"http://wiki.apache.org/solr/SolrJetty\">Jetty</a>, check out <a href=\"http://wiki.apache.org/solr/SolrInstall\">Solr's wiki</a>. In particular, if you're going to need multiple instances of Solr to run, pay attention to the sections on Multipe Solr apps on those wiki pages.</p>\n",
			"date_published": "2007-10-05T16:22:14Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2007-10-04-coldfusion-solr-client-solcoldfusion/",
			"url": "https://waynegraham.github.io/posts/2007-10-04-coldfusion-solr-client-solcoldfusion/",
			"title": "Coldfusion Solr Client - SolColdfusion",
			"content_html": "<p>As I hinted at yesterday, I was close to having some code in the pipeline to abstract using Solr. I've finished the initial code with the following built in. Here's a brief setup guide to start playing with the code.</p>\n<p>First, you're going to need to grab the latest <a href=\"http://www.apache.org/dyn/closer.cgi/lucene/solr/\">release version of Solr (currently 1.2)</a>. The only real requirement to run this software is that you have a JRE of 1.5 or higher. Untar/zip the file somewhere convenient and open a command prompt. Get to the example directory in the apache-solr.1.2.x folder (cd /example). To start up the sample server running Jetty, just issue the following command:</p>\n<pre><code>java -jar start.jar\n</code></pre>\n<p>This will start a new instance of the Solr server on your computer on port 8983. You can make sure this is running by navigating to <a href=\"http://localhost:8983/solr\">http://localhost:8983/solr</a> (NOTE: this is a link to your computer. If you get an error, it's because your computer isn't running an instance of Solr on port 8983).</p>\n<p>At this point, it's probably good to send you over to the Solr website to take a look at <a href=\"http://lucene.apache.org/solr/tutorial.html\">their tutorial</a>. Go ahead. I'll wait...</p>\n<p>...</p>\n<p>Great, you're back.</p>\n<p>You've seen some basic inserting, deleting, and querying of Solr index data. You may have also noticed that there are clients for PHP, Ruby, Python, and Java...no ColdFusion. I want to do a little more testing on this before I submit the patch, but I've added the initial code as an encosure here to do updating, deleting, and searching in Coldfusion.</p>\n<p>The CFC SolColdfusion should be in the path org/apache/client (at least that's where I'm putting in for the purposes of this initial demonstration). The initialization takes one required parameter (the Solr host) and then has two optional parameters (port and path).</p>\n<p>To set this up, create an instance with</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\">&lt;cfset solr = createObject(“component”, “org.apache.solr.client.SolColdfusion”).init(“http://localhost”, “8983”, “/solr”) /></code></pre>\n<p>Now, there are a lot of different parameters you can send to Solr to perform different queries. And, since some of these key names can repeat, I chose to implement sending these parameters as an array. So, let's set this up.</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">params</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> arrayNew(1)</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">params[1][1]</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> “indent”</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">params[1][2]</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> “on”</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">params[2][1]</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> “wt”</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">params[2][2]</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> “standard”</span> <span class=\"token punctuation\">/></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">params[3][1]</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> “fl”</span> <span class=\"token punctuation\">/></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">params[3][2]</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> “*,score”</span> <span class=\"token punctuation\">/></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">params[4][1]</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> “qt”</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">params[4][2]</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> “standard”</span> <span class=\"token punctuation\">/></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">params[5][1]</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> “wt”</span> <span class=\"token punctuation\">/></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">params[5][2]</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> “standard”</span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p>These parameters are basically what are the defaults that Solr will return back to you. If you want highlighting, you would need to add two additional row vectors with 'hl = on' and 'hl.fl = '.</p>\n<p>Searching is straight forward, taking a query, the start row, number of rows to return, and the array of parameters:</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\">&lt;cfset results = solr.search(\"*:*\", 0, 10, params) /></code></pre>\n<p>This searches all fields and all content and returns back an XML document with the search results in it.</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfdump</span> <span class=\"token attr-name\">var</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“#results#”</span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p>In the result node, you'll see that Solr returns an xmlAttribute of <em>numFound of 0</em> (assuming you don't have anything in the index). Let's add an example document from the documents that come with Solr.</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfxml</span> <span class=\"token attr-name\">variable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“sample”</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>doc</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>F8V7067-APL-KIT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Belkin Mobile Power Cord for iPod w/ Dock<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>manu<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Belkin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span> \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>cat<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>electronics<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span> \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>cat<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>connector<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span> \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>features<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>car power adapter, white<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span> \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>weight<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>price<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>19.95<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span> \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>popularity<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inStock<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>false<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span> \n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>doc</span><span class=\"token punctuation\">></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>cfxml</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">solr.add(sample)</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">solr.commit()</span> <span class=\"token punctuation\">/></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">solr.optimize()</span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">results</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> solr.search(“id:F8V7067-APL-KIT”,</span> <span class=\"token attr-name\">0,</span> <span class=\"token attr-name\">10,</span> <span class=\"token attr-name\">params)</span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfdump</span> <span class=\"token attr-name\">var</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“#xmlParse(results)#”</span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p>You'll notice I used a commit and optmize statement. Neither of these statements are necessary every time you add a document, but be aware that Solr caches documents and won't flush the new documents to disk unless you either commit the documents or the mergefactor setting you used in your solrconfig.xml file has been reached.</p>\n<p>Now, let's delete this document...</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">solr.deleteById(\"F8V7067-APL-KIT\")</span> <span class=\"token punctuation\">/></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cfset</span> <span class=\"token attr-name\">solr.commit()</span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p>Don't forget to commit deletions to the index!</p>\n<p>There'll be more soon (add multiple documents, delete by queries). In the mean time, try it out. If you have any comments, questions, concerns, whatever, let me know.</p>\n",
			"date_published": "2007-10-04T19:19:47Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2007-10-03-coldfusion-and-solr/",
			"url": "https://waynegraham.github.io/posts/2007-10-03-coldfusion-and-solr/",
			"title": "ColdFusion and Solr",
			"content_html": "<p>I've spent the last few months working on some projects that didn't really have anything to do with ColdFusion (lots of Java and PHP). One of the projects I've been working with (<a href=\"http://www.vufind.org/\">Vufind.org</a>) uses <a href=\"http://lucene.apache.org/solr/\">Solr</a> as it's indexing/search engine. That's starting to get picked up by some pretty big companies (Netflix just relaunched their search using Solr this week).</p>\n<p>I've been working with Solr in Java for a bit now, and I wanted to start to build an interface for using it as a search engine (my Lucene code is stuck in open source limbo) in Coldfusion. One of the cool things about Solr is that it returns results back through HTTP (in XML, JSON, or ruby).</p>\n<p>As soon as I get the code finished, I'll post it as a patch in Solr.</p>\n",
			"date_published": "2007-10-03T19:38:43Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2007-08-31-jvm-settings/",
			"url": "https://waynegraham.github.io/posts/2007-08-31-jvm-settings/",
			"title": "JVM Settings",
			"content_html": "<p>I ran across this great <a href=\"http://blogs.sun.com/watt/resource/jvm-options-list.html\">compilation of JVM settings</a> for the different versions of Java. Very useful for Java tuning!</p>\n",
			"date_published": "2007-08-31T12:24:50Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2007-06-14-facebook-api/",
			"url": "https://waynegraham.github.io/posts/2007-06-14-facebook-api/",
			"title": "Facebook API",
			"content_html": "<p>I've been kind of silent here as I've been trying to keep this blog at least somewhat focused on ColdFusion and I've been doing development in some different languages as of late (Java, PHP, and Ruby). However, when Facebook released their API for developers, my summer assistant Phil started hacking away at it and we've released our first app for Facebook: <a href=\"http://apps.facebook.com/swemtools/\">SwemTools</a>.</p>\n<p>It does a couple of things, provides a search interface for both the online catalog and our website, news feeds, hours, and a bit of a neat application based on <a href=\"http://swem.wm.edu/services/swemsignal/\">Swem Signal</a> that was created by <a href=\"http://wm.facebook.com/profile.php?id=7605710\">Tom MacWright</a>.</p>\n<p>We're still working on the code for the Signals part, but the idea is that on a map of the library, you'd be able to see where your friends are. Right now, you can see a dot where your friends are, but not who they are...but we're working on a solution for it.</p>\n<p>Anyway, if you're on <a href=\"http://www.facebook.com/\">Facebook</a>, check it out...you can add me as a friend too.</p>\n",
			"date_published": "2007-06-14T14:41:57Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2007-05-17-fun-with-pdfs/",
			"url": "https://waynegraham.github.io/posts/2007-05-17-fun-with-pdfs/",
			"title": "Fun with PDFs",
			"content_html": "<div class=\"body\">\n<p>I've been working with a lot of PDF files lately for a few different projects (see <a href=\"http://swem.wm.edu/beta/flathat/\">The FlatHat</a> and <a href=\"http://swem.wm.edu/beta/cards/\">Card Catalog</a>). With our special collections cards, when you got a result back, Acrobat viewer would blow up the image to around 600%, making for a rather ugly image. For the FlatHat, I really wanted to be able to open a PDF and have the search terms highlighted, so I started hunting for ways to actually do this.</p>\n<p>I've been using <a href=\"http://www.pdfbox.org/\">PDFBox</a> to extract text from our PDFs to index with Lucene, so I started there and they clued me in to Adobe's <a href=\"http://partners.adobe.com/public/developer/en/acrobat/PDFOpenParameters.pdf\">PDF Open Parameters</a>. This really killed a few birds with one stone.</p>\n<p>When I was working on the Flat Hat newspaper, I was originally only returning back the page that the search result was on. I had some misgivings about this (like what if the story was on more than one page), but being able to pass the search query from the engine into the PDF is really nice since the user doesn't have to search through the entire issue to find the the context they are searching for (e.g. <a href=\"http://swem.wm.edu/beta/flathat/issues/fh19440301.pdf#search=%22whistle%20bait%22&amp;zoom=125\">whistle bait</a> -- when I saw that term, I cracked up; definitely a different era).</p>\n<p>Basically, the PDF Open Parameters allow you to pass commands into a PDF to allow you to control how the PDF is opened. They're passed with a &quot;#&quot; after the filename (e.g. filename.pdf#zoom=100). You can string commands together with an ampersand (&amp;) with a few caveats:</p>\n<ol>\n\t<li>only one digit after a decimal is retained</li>\n\t<li>parameters and their values can only be 32 total characters long</li>\n\t<li>you can't use reserved characters (=, #, and &amp;) to escape special characters</li>\n\t<li>if you turn bookmarks off for a PDF that had bookmarks showing, they won't go away until the PDF has been rendered</li>\n</ol>\nAnyway, here are some examples of what you can do:\n<ul>\n\t<li><a href=\"http://swem.wm.edu/beta/flathat/issues/fh19391031.pdf#page=3\">http://swem.wm.edu/beta/flathat/issues/fh19391031.pdf#page=3</a></li>\n\t<li><a href=\"http://swem.wm.edu/beta/flathat/issues/fh19391031.pdf#page=3&amp;zoom=150,250,100\">http://swem.wm.edu/beta/flathat/issues/fh19391031.pdf#page=3&amp;zoom=150,250,100</a></li>\n\t<li><a href=\"http://swem.wm.edu/beta/flathat/issues/fh19391031.pdf#pagemode=thumbs\">http://swem.wm.edu/beta/flathat/issues/fh19391031.pdf#pagemode=thumbs</a></li>\n\t<li><a href=\"http://swem.wm.edu/beta/flathat/issues/fh19391031.pdf#page=4&amp;view=fitH,100\">http://swem.wm.edu/beta/flathat/issues/fh19391031.pdf#page=4&amp;view=fitH,100</a></li>\n\t<li><a href=\"http://swem.wm.edu/beta/flathat/issues/fh19391031.pdf#pagemode=none\">http://swem.wm.edu/beta/flathat/issues/fh19391031.pdf#pagemode=none</a></li>\n</ul>\n</div>\n",
			"date_published": "2007-05-17T21:12:25Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2007-04-30-her-royal-majesty/",
			"url": "https://waynegraham.github.io/posts/2007-04-30-her-royal-majesty/",
			"title": "Her Royal Majesty",
			"content_html": "<p>Ok, it's been a while. I've been working on some non-ColdFusion projects so I've been a bit remiss in keeping things up-to-date here. But big news (at least for William and Mary). Her Royal Majesty, Queen Elizabeth II will be visiting William and Mary this Friday as part Jamestown's 400th anniversary.</p>\n<p>Normally this wouldn't be related to ColdFusion at all, but last week it was announced that she would be coming here and thus ensued a mad rush to get an <a href=\"http://swem.wm.edu/exhibits/queen/\">online exhibit of the Queen's 1957 visit up</a> that would make available pretty much everything we have stored in our Special Collections from her previous visit. I got to use Model-Glue after a long time of not looking at it. I had almost forgotten how painless Model-Glue makes putting projects like this together.</p>\n<p>I just wanted to give a big thanks to Joe Rinehart and Doug Hughes for bringing the &quot;rapid&quot; back into rapid application development!</p>\n",
			"date_published": "2007-04-30T12:30:20Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2007-03-06-subversion-with-mod_security/",
			"url": "https://waynegraham.github.io/posts/2007-03-06-subversion-with-mod_security/",
			"title": "Subversion with mod_security",
			"content_html": "<p>I ran into a bit of an issue while setting up a new subversion server today. On that box we're running <a href=\"http://www.modsecurity.org/\">mod_security</a> on all vhosts to add another layer of security to our web apps. I got everything configured with the the security, but when I was testing, I kept getting 403 errors when I attempted to get the files in anything other than a web browser.</p>\n<p>After scratching my head for a while, I looked at the Apache logs, and noticed that mod_rewrite was causing the issue with lines like this:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>Tue Mar 06 <span class=\"token number\">13</span>:46:46 <span class=\"token number\">2007</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>error<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>client xxx.xxx.xxx.xxx<span class=\"token punctuation\">]</span> mod_security: Access denied with code <span class=\"token number\">403</span>. Pattern match ”<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>^$<span class=\"token operator\">|</span>^application/x-www-form-urlencoded$<span class=\"token operator\">|</span>^multipart/form-data<span class=\"token punctuation\">)</span>” at HEADER<span class=\"token punctuation\">(</span>“Content-Type”<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>severity “EMERGENCY”<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>hostname “svn.example.com”<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>uri “/test”<span class=\"token punctuation\">]</span></code></pre>\n<p>I stumbled on <a href=\"http://blog.charlvn.za.net/2006/09/subversion-modsecurity.html\">Charl van Niekerk's</a> entry on this. One of the comments suggested that the following is the bare minimum to run mod_security on a vhost running subversion:</p>\n<pre><code>SecFilterSelective REQUEST_METHOD ”^(PROPFIND|PROPPATCH)$” allow\nSecFilterSelective REQUEST_METHOD ”^(REPORT|OPTIONS)$” allow\nSecFilterSelective REQUEST_METHOD ”^(MKACTIVITY|CHECKOUT)$” allow\nSecFilterSelective REQUEST_METHOD ”^(PUT|DELETE|MERGE)$” allow\n</code></pre>\n<p>This should be in the first directives in your mod_security call:</p>\n<pre><code>&lt;IfModule mod_security.c&gt;\n  # Enable ModSecurity\n  SecFilterEngine On\n\n  SecFilterSelective REQUEST_METHOD ”^(PROPFIND|PROPPATCH)$” allow\n  SecFilterSelective REQUEST_METHOD ”^(REPORT|OPTIONS)$” allow\n  SecFilterSelective REQUEST_METHOD ”^(MKACTIVITY|CHECKOUT)$” allow\n  SecFilterSelective REQUEST_METHOD ”^(PUT|DELETE|MERGE)$” allow\n&lt;/IfModule&gt;\n</code></pre>\n<p>If you run a Subversion repository and have run into this issue, these security filters should help!</p>\n",
			"date_published": "2007-03-06T21:35:02Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2007-02-02-ms-access-via-jdbc/",
			"url": "https://waynegraham.github.io/posts/2007-02-02-ms-access-via-jdbc/",
			"title": "MS Access via JDBC",
			"content_html": "<p>We recently made the move from an IIS Windows web server to an Apache *nix based web server as part of our efforts to consolidate our library's server infrastructure. And for reasons I won't expound upon, we had one MS Access DSN that didn't get migrated to MSSQL and that needed to be used still. Since ColdFusion uses a Windows only driver for MS Access, I needed to figure out a way around this. I found a couple of JDBC drivers for Access (Easysoft's <a href=\"http://www.easysoft.com/products/data_access/jdbc_odbc_bridge/index.html\">JDBC-ODBC Bridge</a> and HXTT's <a href=\"http://www.hxtt.com/access.html\">Access Pure Java JDBC Drivers</a>), but these seemed to be a bit on the expensive side for the short amount of time that I'd need to keep Access in production.</p>\n<p>I did notice on Easysoft's website that they were using the JdbcOdbc bridge, so after a little bit more digging, I found the syntax to use configure ColdFusion to use MS Access through the JdbcOdbc Bridge; the JDBC URL is</p>\n<pre><code>jdbc:odbc:Driver={Microsoft Access Driver (*.mdb)};DBQ=/path/to/datasource.mdb;DriverID22;\n</code></pre>\n<p>and the Driver Class</p>\n<pre><code>sun.jdbc.odbc.JdbcOdbcDriver\n</code></pre>\n<p>For the very basic inserting of data from a seldom-used web form into a single table, this band aid fix has been doing pretty good!</p>\n",
			"date_published": "2007-02-02T20:23:14Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2006-12-14-redhat-support-kudos/",
			"url": "https://waynegraham.github.io/posts/2006-12-14-redhat-support-kudos/",
			"title": "RedHat Support Kudos",
			"content_html": "<p>It's been a while since I've posted anything, so I figured this would be a good point to start on...</p>\n<p>To start the process of standardizing our server platform in the library, we recently purchased a couple of servers to run RedHat on. I was going through the process yesterday of activating the subscriptions, and a funny thing happened...the second subscription got appended to the first as an extension instead of a new subscription.</p>\n<p>I looked all over the place trying to figure out where the subscription had gone to, and read, and reread the directions (there's not really that much to it). I had deleted and re-added the system (in an effort to clear the entitlements) so many times I lost count.</p>\n<p>I finally broke down and decided to give RedHat a call. I have to say this was perhaps one of the best service calls I've ever had with a software vendor. After my last several experiences with software vendors (we just put in a new media center for college students), I had pretty low expectations. I figured I'd be on the phone for most of the morning trying to convince someone that I did in fact have two, three-year subscriptions and not one, three-year with a three-year extension.</p>\n<p>Things started off normal enough for these things...a labyrinth of options to choose from. After I got the options to get to technical support, someone actually picked up the phone on the second ring! After I explained what I had done, he looked at my account and immediately knew what had happened. He said that he wasn't able to help, but would transfer me to someone who could. Now this is what surprised me, instead of me getting transferred to the folks that could help me, he actually talked to those people, explained what the problem was, and then connected me so I could talk to those people. By the time I actually spoke with the account rep, she already knew what the problem was and what needed to be done to fix the problem instead of me rehashing my story over and over again.</p>\n<p>I wish more companies handled issues like this...my five minute problem literally took five minutes to resolve. Too many times in the recent past I've gotten the run-around for what I believed a rather straight-forward issue. It's very refreshing to have this kind of experience with a software vendor!</p>\n",
			"date_published": "2006-12-14T21:04:25Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2006-09-21-form-validation/",
			"url": "https://waynegraham.github.io/posts/2006-09-21-form-validation/",
			"title": "Form Validation",
			"content_html": "<p>I've been playing with some form validation stuff for CF. I had been usign , but I wanted the HTML interface to act a bit more like the Flash interface, but I don't really want to use Flash. I've also been doing a lot more work with some of the DHTML libraries that AJAX has made popular, so I figured there had to be a relatively elegent way to do form validations with something like <a href=\"http://prototype.conio.net/%3Eprototype%3C/a%3E.%3C/p%3E%3Cp%3EI%20remembered%20seeing%20something%20on%20%3Ca%20href=\">Ajaxian</a> about easy form validation and decided to give it a try. The article on <a href=\"http://tetlaw.id.au/view/blog/really-easy-field-validation-with-prototype/\">Dexagogo</a> shows how they created a library to handle form-validations that doesn't require any other work than creating a form. This was just what I was looking for!</p>\n<p>Basically, you just need the latest files from <a href=\"http://script.aculo.us/\">script.aclo.us</a> with the latest prototype version (the 1.5 release candidate is included in the latest script.aculo.us lib folder), and the validation library. Convienently, they're all included <a href=\"http://tetlaw.id.au/upload/dev/validation/validation1.5.3.zip\">in the demo file on the site</a>.</p>\n<p>To use this, you really only need prototype and the validation library (script.aculo.us adds a nice effect – much like the Flash format in cfform). For me, I made these calls:</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/scripts/scriptaculous/lib/prototype.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“text/javascript”</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“/scripts/validator.js”</span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  &lt;script type=“text/javascript” src=“/scripts/scriptaculous/scriptaculous.js?load=effects”><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>This is slightly different than the example on their page; they load the effects.js file directly, I'm calling the library via script.aculo.us with the load parameter. This isn't really a big deal for one library, but it is convenient when you want to use several, but not all, of the libraries (e.g. scriptaculous.js?load=effects,dragdrop,slider).</p>\n<p>Anyway, to actually use this, you need to create a form with an id attribute:</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>feedback<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>feedback<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#cgi.script_name#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> \n  ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Now, we add some fields and use the class attribute to call the validator:</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>code<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    Name: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“text”</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“name”</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“name”</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“required”</span> <span class=\"token punctuation\">/></span></span>\n    Email: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“text”</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“email”</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“email”</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“required</span> <span class=\"token attr-name\">validate-email”</span> <span class=\"token punctuation\">/></span></span> \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“submit”</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>There are 11 options for use in the validation library (this is directly off their page):</p>\n<ul>\n\t<li>required (not blank)</li>\n\t<li>validate-number (a valid number)</li>\n\t<li>validate-digits (digits only)</li>\n\t<li>validate-alpha (letters only)</li>\n\t<li>validate-alphanum (only letters and numbers)</li>\n\t<li>validate-date (a valid date value)</li>\n\t<li>validate-email (a valid email address)</li>\n\t<li>validate-url (a valid URL)</li>\n\t<li>validate-date-au (a date formatted as; dd/mm/yyyy)</li>\n\t<li>validate-currency-dollar (a valid dollar value)</li>\n\t<li>validate-one-required (At least one textbox/radio element must be selected in a group)</li>\n</ul>\n<p>This is really nice, because if you want to allow an optional field, but validate it, you can do:</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>validate-email<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p>There's one more piece of the pie...to call the validation library. At the bottom of your page add:</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“text/javascript”</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Validation</span><span class=\"token punctuation\">(</span><span class=\"token string\">'feedback'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>The first argument is the id attribute of the form you're wanting to validate. The second tells the Validator object what to do. This particular example enables validation on each field as you leave it (which I find useful). Some of the other options are:</p>\n<ul>\n\t<li>stopOnFirst (boolean): Stop on the first validation failure; default: false</li>\n\t<li>onSubmit (boolean): Override the default behavior of adding an even listener to the onsubmit event (set to false if you want to make sure your onsubmit method gets called no matter what); default: true</li>\n\t<li>immediate (boolean): validate when the cursor leaves the field; default: false</li>\n\t<li>focusOnError (boolean): place the focus on the first field with an error; default: true</li>\n\t<li>useTitles (boolean): make field validators use form element title attributes as error advice message; default: false</li>\n\t<li>onFormValidate (string function): call a function when the form is validated</li>\n\t<li>onElementValidate (string function): call a function when an element is validated</li>\n</ul>\n<p>What I thought was really cool was the ability to add custom validation types via an API. Say you only want folks to use capital letters for their names, you simply add a new validation type like:</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> \n  Validation.add(\n    'validate-ucase',\n    'Please only use upper-case letters (A-Z) in this field.',\n     function(v){ return Validation.get('IsEmpty').test(v) || /^[A-Z]+$/.test(v);\n  );\n}\n</code></pre>\n<p>Want to add several? You can do that too:</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>“javascript”</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  Validation<span class=\"token punctuation\">.</span><span class=\"token function\">addAllThese</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span> \n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-lcase'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please only use lower-case (a-z) letters in this field'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[a-z]+$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-zip'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please check your zip code'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(\\d{5})(( |-)?(\\d{4}))?$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-phone'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please check your phone number'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(([0-9]{3}-)|([0-9]{3}) ?)?[0-9]{3}-[0-9]{4}$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-ssn'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please check the Social Security Number. It should follow the format 999-99-9999'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^([0-9]{3}(-?)[0-9]{2}(-?)[0-9]{4})$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-ip'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please check the IP address'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]).(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]).(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]).(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-uuid'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please check the UUID'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{16}$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-guid'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please check the GUID'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[0-9a-f]{8,8}-[0-9a-f]{4,4}-[0-9a-f]{4,4}-[0-9a-f]{4,4}-[0-9a-f]{12,12}]$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-float'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please only use floating point numbers in this field'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(\\b[0-9]+.([0-9]+\\b)?|.[0-9]+\\b)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-visa'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please check your credit card number'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^4\\d{3}-?\\d{4}-?\\d{4}-?\\d{4}$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-mastercard'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please check your credit card number'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^5[1-5]\\d{2}-?\\d{4}-?\\d{4}-?\\d{4}$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-discovery'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please check your credit card number'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^6011-?\\d{4}-?\\d{4}-?\\d{4}$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-amex'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please check your credit card number'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^3[4,7]\\d{13}$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-diners'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please check your credit card number'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^3[0,6,8]\\d{12}$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'validate-time'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Please only use time in this field'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Validation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IsEmpty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\d{1,2}[:]\\d{2}([:]\\d{2})?( [aApP][mM]?)?$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span> \n      <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>This should be all of the normal items included in  (plus a couple extra for good measure). Now the only thing left is to make it look pretty. One of the nice things about the Flash format in  is that it color codes required fields with the different halo effects. To obtain a similar effect in the forms, we'll use style sheets instead.</p>\n<p>This is a rather light stylesheet, but it'll give you something to start with (based on the default haloGreen skin):</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n\n<span class=\"token selector\">input.required, textarea.required</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #ffbf2b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">input.validation-failed, textarea.validation-failed</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #ff3300<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ff3300<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">input.validation-passed, textarea.validation-passed</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #00cc00<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.validation-advice</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 5px 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #FF3300<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.custom-advice</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 5px 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #c8aa00<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span>bold<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>I made a short example of some of the validations at <a href=\"http://swem.wm.edu/blogs/waynegraham/examples/validation/\">http://swem.wm.edu/blogs/waynegraham/examples/validation/</a>. I have to say that I've found this to be a bit better solution (at least for my needs) than using !</p>\n",
			"date_published": "2006-09-21T13:17:42Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2006-09-07-tweaking-eclipse/",
			"url": "https://waynegraham.github.io/posts/2006-09-07-tweaking-eclipse/",
			"title": "Tweaking Eclipse",
			"content_html": "<p>I finally got fed up yesterday with the slow speed at which Eclipse was launching on my Windows box. On my Linux box, it doesn't take <em>that</em> long to launch (may five or six seconds) compared to my Windows box (around 15 - 20 seconds). I know I have a lot of plugins, but it was getting a little ridiculous. I started poking around and I noticed in the configuration details (Help / About Eclipse SDK / Configuration Details) that the vm that was launching was 1.4. Ok, so there's one problem. I also noticed that the max memory setting was 256MB (-Xmx256M). Since this box has 2GB of RAM, I figured 256MB is a little on the low side (and note, mucking around with the heap sizes won't help load times).</p>\n<p>The first thing I did was change the shorcut target for Eclipse to be</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">C:<span class=\"token punctuation\">\\</span>eclipse<span class=\"token punctuation\">\\</span>eclipse.exe <span class=\"token parameter variable\">-vm</span> <span class=\"token string\">\"C:\\Program Files\\Java\\jdk1.5.0_08<span class=\"token entity\" title=\"\\b\">\\b</span>in\\javaw.exe\"</span></code></pre>\n<p>Now I'm sure that Eclipse will launch with Java 5 and (hopefully) speed things up a bit. Double-click on the short-cut, and sure enough, we're down to about 8 seconds.</p>\n<p>The next thing I wanted to do is increase the default min and max memory settings. In c:\\eclipse\\eclipse.ini, you'll see</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token parameter variable\">-vmargs</span>\n<span class=\"token parameter variable\">-Xms40M</span>\n<span class=\"token parameter variable\">-Xmx256M</span></code></pre>\n<p>I changed these to</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token parameter variable\">-vmargs</span>\n<span class=\"token parameter variable\">-Xms256m</span>\n<span class=\"token parameter variable\">-Xmx768m</span></code></pre>\n<p>This increases the minimum memory space to 256M and the maximum to 768M. You can also do this by adding these vmargs to the shortcut target:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">C:<span class=\"token punctuation\">\\</span>eclipse<span class=\"token punctuation\">\\</span>eclipse.exe <span class=\"token parameter variable\">-vm</span> <span class=\"token string\">\"C:\\Program Files\\Java\\jdk1.5.0_08<span class=\"token entity\" title=\"\\b\">\\b</span>in\\javaw.exe\"</span> <span class=\"token parameter variable\">-vmargs</span> <span class=\"token parameter variable\">-Xms256M</span> <span class=\"token parameter variable\">-Xmx768M</span></code></pre>\n<p>If you have a multi-processor computer (and I believe this includes dual-core systems, though I haven't read the docs on this), you can use some of the new VM ergonomics to self-tune garbage collection by adding this switch:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token parameter variable\">-XX:+UseParallelGC</span></code></pre>\n<p>One last handy parameter is &quot;-showlocation&quot; which shows the current location of your workspace. If you have different workspaces, this is handy.</p>\n<p>If you want to read more about some JVM garbage collection (and who doesn't) here are some helpful links:</p>\n<ul>\n\t<li><a href=\"http://java.sun.com/javase/technologies/hotspot.jsp\">Java SE HotSpot at a Glance</a></li>\n\t<li><a href=\"http://java.sun.com/j2se/1.5.0/docs/guide/vm/gc-ergonomics.html\">Garbage Collector Ergonomics</a></li>\n\t<li><a href=\"http://java.sun.com/docs/hotspot/gc5.0/gc_tuning_5.html\">Tuning Garbage Collection with the 5.0 Java Virtual Machine</a></li>\n\t<li><a href=\"http://java.sun.com/docs/performance/\">Java Performance Documentation</a></li>\n\t<li><a href=\"http://blogs.sun.com/watt/resource/jvm-options-list.html\">A Collection of JVM Options</a> (check out the references at the bottom of the page)</li>\n</ul>\n",
			"date_published": "2006-09-07T20:30:14Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2006-08-31-postgres-on-ubuntu/",
			"url": "https://waynegraham.github.io/posts/2006-08-31-postgres-on-ubuntu/",
			"title": "Postgres on Ubuntu",
			"content_html": "<p>I was setting my computer up for a database systems class I'm taking this semester. I got to the point of getting PostgreSQL 8.1, pgAdmin III, and the JDBC drivers installed, but I couldn't figure out how to connect to the darn thing. I knew it created the account postgres, but since I was installing through apt-get, there wasn't any point that I set the password.</p>\n<p>I finally broke down and started reading the documentation (which is excellent by the way), but all of the documents about the initial configuration were on compiling from the sources. I finally got tired of clicking &quot;Next&quot; in the docbook files and stumbled across a post at <a href=\"http://hocuspok.us/journal/postgresql-on-ubuntu-linux-how-to-updated\">hocuspok.us</a>.</p>\n<p>The step I was missing (and I'm sure I would have eventually found) was running:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">su</span> postgres <span class=\"token parameter variable\">-c</span> psql template1\n<span class=\"token assign-left variable\">template1</span><span class=\"token operator\">=</span><span class=\"token comment\"># ALTER USER postgres WITH PASSWORD '$password$';</span>\n<span class=\"token assign-left variable\">template1</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\q</span></code></pre>\n<p>Even after just playing with this for a couple of hours, I'm seriosly thinking of changing my development DB from MySQL to PostgreSQL. Pretty impressive!</p>\n",
			"date_published": "2006-08-31T12:52:16Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2006-08-23-real-life-xslt-20-transformations/",
			"url": "https://waynegraham.github.io/posts/2006-08-23-real-life-xslt-20-transformations/",
			"title": "Real Life XSLT 2.0 transformations",
			"content_html": "<p>I ran into a bit of a situation that was really blowing my mind. I have a rather large XML file (around 20,000+ lines) marked up in TEI that I wanted to do some transformations on (a day book and ledger from the 1850s). Essentially the code follows the format</p>\n<pre class=\"language-xml\" tabindex=\"0\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figure</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>Page 12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>graphic</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0023_p12<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figure</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fw</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">place</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top-center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>place<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>7022220<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Williamsburg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span>,\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>date</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1850<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1850<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>date</span><span class=\"token punctuation\">></span></span>,\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fw</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>row</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cell</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>date</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1850-10-03<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>choice</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>abbr</span><span class=\"token punctuation\">></span></span>Oct<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hi</span> <span class=\"token attr-name\">rend</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sup;underline<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>r<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>hi</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>abbr</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>expan</span><span class=\"token punctuation\">></span></span>October<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>expan</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>choice</span><span class=\"token punctuation\">></span></span> 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hi</span> <span class=\"token attr-name\">rend</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sup<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>th<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>hi</span><span class=\"token punctuation\">></span></span> 1850<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>date</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>cell</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cell</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>griffss01<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Doct<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hi</span> <span class=\"token attr-name\">rend</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sup;underline<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>r<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>hi</span><span class=\"token punctuation\">></span></span> S S Griffin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>cell</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cell</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>em</span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>em</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>cell</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>row</span><span class=\"token punctuation\">></span></span>\n...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pb</span><span class=\"token punctuation\">/></span></span></code></pre>\n<p>What I wanted to accomplish was group all this together in separate divs for HTML output (ok, I actually need to write each page to its own file, but this is pretty much just one more step).</p>\n<p>I just could not find a way to group this info this way using XSLT 1 without wrapping each page within its own div structure. I didn't really want to go back and do this, so I asked the TEI-L list. David Sewell pinged me back with some XQuery code that recursively recalls the document structure for a given node.</p>\n<p>He also mentioned that it would be pretty easy to write an XSLT 2 transformation that groups these nodes together. I did a little bit of digging and came up with</p>\n<pre class=\"language-xml\" tabindex=\"0\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>template</span> <span class=\"token attr-name\">match</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tei:div<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>for-each-group</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">group-ending-with\"tei:</span>pb\"</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>page<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>apply-templates</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>current-group()<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>for-each-group</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>template</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>This transformed the pages to what I was wanting</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>page<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0023_12.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Page 12<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fw<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Williamsburg, 1850,<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>abbr<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Oct<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sup</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>u</span><span class=\"token punctuation\">></span></span>r<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>u</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sup</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>expan<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>October 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sup</span><span class=\"token punctuation\">></span></span>th<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sup</span><span class=\"token punctuation\">></span></span> 1850<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>date</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript:getName('griffss01');>Doct&lt;sup>&lt;u>r&lt;/u>&lt;/sup> S S Griffin&lt;/a>\n      &lt;/td>\n      &lt;td>&lt;strong>&lt;em><span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>nbsp;&lt;/em>&lt;/strong>&lt;/td>\n    &lt;/tr>\n    ...\n  &lt;/table>\n&lt;/div>\n&lt;div class=<span class=\"token punctuation\">\"</span></span><span class=\"token attr-name\">page\"</span><span class=\"token punctuation\">></span></span>\n...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>The XSLT processor for ColdFusion doesn't support XSLT 2.0 (it's still a draft spec). However, Saxon does (specifically Saxon 8). For more on doing XSLT transformations, see <a href=\"http://swem.wm.edu/blogs/waynegraham/index.cfm/2005/11/21/XSLT-20-in-ColdFusion\">XSLT 2.0 in ColdFusion</a>.</p>\n",
			"date_published": "2006-08-23T15:56:31Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2006-08-21-getting-xml-from-mssql-server/",
			"url": "https://waynegraham.github.io/posts/2006-08-21-getting-xml-from-mssql-server/",
			"title": "Getting XML from MSSQL Server",
			"content_html": "<p>I've been playing with <a href=\"http://openrico.org/\">all</a> <a href=\"http://swem.wm.edu/blogs/waynegraham/index.cfm/2006/scriptaculous\">the</a> <a href=\"http://labs.adobe.com/technologies/spry/\">AJAX</a> <a href=\"http://dojotoolkit.org/\">stuff</a> <a href=\"http://developer.yahoo.com/yui/\">that's</a> <a href=\"http://code.google.com/webtoolkit/\">been</a> <a href=\"http://mochikit.com/\">coming</a> <a href=\"http://www.aflax.org/\">out</a> <a href=\"http://jquery.com/\">lately</a>. I suppose that like a lot of folks, I was creating a query, then having a generic function that created the XML in a proxy file for the JavaScript (<a href=\"http://ray.camdenfamily.com/index.cfm/2006/7/13/ToXML-Update\">Ray Camden has a really nice function for transforming a query to XML</a>).</p>\n<p>Last week I was doing some research to find a way to do some XML searching and stumbled upon the <a href=\"http://msdn2.microsoft.com/en-us/library/ms190922.aspx\">FOR XML</a> statement. I knew that most RDBMSs were capable of dealing with XML record sets, but it's been years since I've even looked at any of the XML stuff for MSSQL.</p>\n<p>The FOR XML statement returns a query result and transforms rows into XML elements. There are three arguments that this can take:</p>\n<ul>\n\t<li><a href=\"http://msdn2.microsoft.com/en-us/library/ms175140.aspx\">RAW</a>: Transforms each row into an element with a generic identifier (<row>) as the element tag.</row></li>\n\t<li><a href=\"http://msdn2.microsoft.com/en-us/library/ms188273.aspx\">AUTO</a>: Returns the results in a simple nested XML tree</li>\n\t<li><a href=\"http://msdn2.microsoft.com/en-us/library/ms175140.aspx\">EXPLICIT</a>: Allows you to define the XML tree returned</li>\n</ul>\n",
			"date_published": "2006-08-21T15:49:57Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2006-08-17-improving-ubuntu-gui-resposiveness/",
			"url": "https://waynegraham.github.io/posts/2006-08-17-improving-ubuntu-gui-resposiveness/",
			"title": "Improving Ubuntu GUI Resposiveness",
			"content_html": "<p>I ran across this on Digg under the title <a href=\"http://martin.ankerl.org/2006/08/16/how-to-make-firefox-40-percent-faster/\">How to Make Firefox Over 40% Faster</a>. While the improvement actually has nothing to do with Firefox, it does cover how to improve the CPU scaling settings.</p>\n<p>Quick breakdown...</p>\n<p>Uninstall powernowd</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> remove powernowd</code></pre>\n<p>Enable speed-stepping (I'm running Centrino)</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> modprobe speedstep-centrino</code></pre>\n<p>Enable the ondemand governor</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> modprobe cpufreq-ondemand</code></pre>\n<p>This step is a change from Martin's directions, his says to use sudo, but you can't write to /sys with sudo, so</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> ondemand <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor</code></pre>\n<p>Now it's just a matter of updating your performance settings:</p>\n<p>Open <em>/etc/modules</em> and add</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">speedstep-centrino\ncpufreq-ondemand</code></pre>\n<p>Install sysfsutils</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> sysfsutils</code></pre>\n<p>Add to /etc/sysfs.conf</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">devices/system/cpu/cpu0/cpufreq/scaling_governor<span class=\"token operator\">=</span>ondemand</code></pre>\n<p>Basically what this is doing is stepping up the processor frequency if the CPU reaches 80% utilization.</p>\n",
			"date_published": "2006-08-17T14:50:06Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2006-07-21-ie-7-beta-3-in-standalone-mode/",
			"url": "https://waynegraham.github.io/posts/2006-07-21-ie-7-beta-3-in-standalone-mode/",
			"title": "IE 7 beta 3 in Standalone Mode",
			"content_html": "<p>I've been running IE 7 beta 2 in standalone mode (so it wouldn't override my real IE installation) for a while. However, when beta 3 came there were some issues going to beta 3 because it needed to write some values to the registry and didn't assume your default settings.</p>\n<p>I ran across <a href=\"http://tredosoft.com/IE7_standalone\">Tredosoft's entry on how to get beta 3 working</a>. The really nice thing is that they packaged a nice installer to do everything for you! So, if you need to test your website in IE 7 (there are some funky things going on with style rendering), I definitely recommend checking this out!</p>\n",
			"date_published": "2006-07-21T12:36:38Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2006-06-23-mg-unity/",
			"url": "https://waynegraham.github.io/posts/2006-06-23-mg-unity/",
			"title": "MG Unity",
			"content_html": "<p>It's been a while since I've written on this blog...I'm attempting to keep this one on CF. Anyway, MG Unity has come out and I have to admit that I'm REALLY glad it has.</p>\n<p>I've been working on a project with five academics from four different institutions looking at the vernacular architecture of the Colonial Chesapeake to 1720 for an article in the William and Mary Quarterly for the 2007 celebration of Jamestown. The objective was to write an scholarly article that looks at everything that has been excavated and see if the arguments of past scholars still hold. Not only were the scholars looking at individual sites as an aggregate, but wanted to track changes to the structures over time (additions, fireplaces, cellars, etc.).</p>\n<p>I knew this was going to be a challenging project from the beginning, so I attempted to set the expectations early for the application development cycle. I thought it a fluke that I actually got them all to aggree on a set of important fields and tables before I started coding anything (a first for me). However, as I got into the project a bit more, requests for additional fields here, moving this data to this table, all while attempting to support constant input into the application got to be a bit more than was really feasible for a &quot;spare-time&quot; project.</p>\n<p>I had set out to use as good of coding practices as I could. Each table had its own DAO, gateway, TOs, validators, etc. However, each change to these fields made me keep mucking around in these files and the forms calling the objects. After a while of making constant changes, I fell back on some old &quot;bad&quot; practices and kind of strong-armed some of the solution with spaghetti code...and I hated myself for it because I knew that I would have to come back at a later date to fix it.</p>\n<p>About this time Joe started doing some work with Arf! And Doug Hughes started work on Reactor. I continued to code in my bad style, but since I knew what I had done, I just kept doing it.</p>\n<p>After the project members presented their paper, I set the project down for a while since my daughter had just been born. Since Joe brought out Unity, I decided now was as good a time as any to pick up the refactoring of the project.</p>\n<p>All I can say is that what I've done in half-a-day with Unity would take me three- to four-times longer my old way. The scaffolds (once I figured out how they were working) have been an absolute godsend for the rather complex relationships between phases of construction and the overall archaeological and architectural record. The Reactor syntax is so easy (especially since ColdSpring seperates all the configuration) that everything just clicks.</p>\n<p>The entire framework is just so intuitive (at least compared to my previous experiences with frameworks). The ability to not have to worry any more about building the basic web pages, forms, CRUD, and displays makes Unity a pleasure. Also, changes will be a breeze compared to what they entailed a couple of months ago, which will allow me to do some of the cool stuff I had planned with Google Maps and Google Earth to map out the locations of these archeaological/historical sites!</p>\n",
			"date_published": "2006-06-23T18:27:46Z"
		}
		,
		{
			"id": "https://waynegraham.github.io/posts/2006-04-21-google-scholar/",
			"url": "https://waynegraham.github.io/posts/2006-04-21-google-scholar/",
			"title": "Google Scholar",
			"content_html": "<p>While Google Calendar has been getting most of the press these days, I noticed a few new features over at <a href=\"http://scholar.google.com/\">Google Scholar</a> that were quite impressive.</p>\n<p>First, in an effort to help folks stay up-to-date on current research in a given field (their example is <a href=\"http://scholar.google.com/scholar?q=quantum+computing\">quantum computing</a>), you can change the sort ordering from everything to &quot;<a href=\"http://scholar.google.com/scholar?q=quantum+computing&amp;hl=en&amp;lr=&amp;scoring=r\">Recent articles</a>&quot;. The good folks at Google then attempt to rank the articles &quot;by looking at the prominence of the author's and journal's previous papers, how many citations it already has, when it was written, and so on&quot; (http://googleblog.blogspot.com/2006/04/keeping-up-with-recent-research.html).</p>\n<p>Trying this out for my own personal interests (<a href=\"http://scholar.google.com/scholar?hl=en&amp;lr=&amp;scoring=r&amp;q=virginia+social+history&amp;btnG=Search\">Virginia social history</a>), I was pleasantly surprised at how well the actual results were that got returned. In fact, the top result was Pulitizer Prize winning author Rhyss Isaac's <em>Landon Carter's Uneasy Kingdon</em>. Not too shabby for a computer algorithm ;)</p>\n<p>The other, perhaps more interesting (and more useful) item is the ability to export results to citation managers (you have to set it in the preferences). They currently support BibTeX, EndNote, RefMan, and Refworks. This seems to work reasonably well...at least for modern works. My test case was a book we're digitizing published in 1863 (<em><a href=\"http://scholar.google.com/scholar?hl=en&amp;lr=&amp;q=%22Bastiles+of+the+North%22&amp;btnG=Search\">Bastiles of the North</a></em>). Probably because its from a citation, and not the actual work, I never got to the import stage in RefWorks.</p>\n<p>Now, if Google would just open up their search API for GoogleScholar...</p>\n",
			"date_published": "2006-04-21T20:04:52Z"
		}
		
	]
}